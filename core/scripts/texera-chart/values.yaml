namespace: texera

# Part 1: the configuration of mongodb and mysql
# We use external charts from bitnami, and pass the values stated below to them.
# For bitnami/mysql, check out: https://artifacthub.io/packages/helm/bitnami/mysql
# For bitnami/mongodb, check out: https://artifacthub.io/packages/helm/bitnami/mongodb
mongodbPv:
  name: mongdb-pv
  size: 10Gi
  path: # the path on the node that contains the pv
  node: # the node that contains the pv

mysqlPv:
  name: mysql-pv
  size: 10Gi
  path: # the path on the node that contains the pv
  node: # the node that contains the pv

mysql:
  image:
    debug: true

  initdbScriptsConfigMap: mysql-init-script

  auth:
    createDatabase: true
    rootPassword: texera
    database: texera_db
    username: texera
    password: texera

  primary:
    startupProbe:
      initialDelaySeconds: 60

    persistence:
      enabled: true
      existingClaim: mysql-pvc

  architecture: standalone

mongodb:
  architecture: standalone
  auth:
    enabled: false
    databases: [texera_storage]
    usernames: [texera]

  persistence:
    enabled: true
    existingClaim: mongodb-pvc

  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 200m
      memory: 256Mi

# Part 2: Configuration of Texera and brain application
# TODO: create template yamls under templates directory to make these values effective
# TODO: add more config items if needed
# Configuration for the pod brain. It should be able to connect to the mysql instance stated above
texeraWorkflowPodBrain:
  numOfPods: 1
  imageName: # image name of the pod brain
  service:
    type: NodePort # for testing purpose, NodePort mode is fine
    port: # port of the pod
    nodePort: # exposed port

# Configuration for the workflow pod
texeraWorkflowPod:
  imageName: # image name of the workflow pod

# Configuration for texera. It should be able to connect to the mysql and mongodb instances stated above
texera:
  numOfPods: 1  # Number of pods for the Texera deployment
  imageName: # image name of the texera
  pv: # pv is used to store the user-resources, i.e. /core/amber/user-resources
    nodeAffinityNode:  # Node where the PV is mounted
    name: texera-pv
    size: 20Gi
    path: /mnt/data/texera
    accessModes:
      - ReadWriteMany  # This enables multiple read/write access
  service:
    type: NodePort # for testing purpose, NodePort mode is fine
    port: # port of the pod
    nodePort: # exposed port

