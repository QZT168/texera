syntax = "proto3";

package edu.uci.ics.amber.engine.common;

import "edu/uci/ics/amber/engine/architecture/rpc/control_commands.proto";
import "edu/uci/ics/amber/engine/architecture/rpc/control_returns.proto";
import "edu/uci/ics/amber/engine/common/workflow_metrics.proto";
import "edu/uci/ics/amber/engine/common/virtual_identity.proto";
import "google/protobuf/timestamp.proto";
import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE,
  preserve_unknown_fields: false
  no_default_values_in_constructor: false
  flat_package: true
};

enum FatalErrorType{
  COMPILATION_ERROR = 0;
  EXECUTION_FAILURE = 1;
}

message BreakpointFault{
  message BreakpointTuple{
    int64 id = 1;
    bool is_input = 2;
    repeated string tuple = 3;
  }

  string worker_name = 1;
  BreakpointTuple faulted_tuple = 2;
}

message OperatorBreakpoints{
  repeated BreakpointFault unresolved_breakpoints = 1;
}

message ExecutionBreakpointStore{
  map<string, OperatorBreakpoints> operator_info = 1;
}

message EvaluatedValueList{
  repeated amber.engine.architecture.rpc.EvaluatedValue values = 1;
}

message OperatorConsole{
  repeated edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage console_messages = 1;
  map<string, EvaluatedValueList> evaluate_expr_results = 2;
}

message ExecutionConsoleStore{
  map<string, OperatorConsole> operator_console = 1;
}

message OperatorWorkerMapping{
  string operator_id = 1;
  repeated string worker_ids = 2;
}

message ExecutionStatsStore {
  int64 start_timestamp = 1;
  int64 end_timestamp = 2;
  map<string, OperatorMetrics> operator_info = 3;
  repeated OperatorWorkerMapping operator_worker_mapping = 4;
}

message WorkflowFatalError {
  FatalErrorType type = 1;
  google.protobuf.Timestamp timestamp = 2 [(scalapb.field).no_box = true];
  string message = 3;
  string details = 4;
  string operator_id = 5;
  string worker_id = 6;
}

message ExecutionMetadataStore{
  WorkflowAggregatedState state = 1;
  repeated WorkflowFatalError fatal_errors = 2;
  edu.uci.ics.amber.engine.common.ExecutionIdentity execution_id = 3 [(scalapb.field).no_box = true];
  bool is_recovering = 4;
}
