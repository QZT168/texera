syntax = "proto3";

package edu.uci.ics.amber.engine.architecture.sendsemantics;

import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE,
  preserve_unknown_fields: false
  no_default_values_in_constructor: true
  flat_package: true
};

import "edu/uci/ics/amber/engine/common/virtual_identity.proto";

message Partitioning {
  oneof sealed_value {
    OneToOnePartitioning one_to_one_partitioning = 1;
    RoundRobinPartitioning round_robin_partitioning = 2;
    HashBasedShufflePartitioning hash_based_shuffle_partitioning = 3;
    RangeBasedShufflePartitioning range_based_shuffle_partitioning = 4;
    BroadcastPartitioning broadcast_partitioning = 5;
  }
}


message OneToOnePartitioning{
  int32 batch_size = 1;
  repeated edu.uci.ics.amber.engine.common.ChannelIdentity channels = 2;
}

message RoundRobinPartitioning{
  int32 batch_size = 1;
  repeated edu.uci.ics.amber.engine.common.ChannelIdentity channels = 2;
}

message HashBasedShufflePartitioning{
  int32 batch_size = 1;
  repeated edu.uci.ics.amber.engine.common.ChannelIdentity channels = 2;
  repeated string hash_attribute_names = 3;
}

message RangeBasedShufflePartitioning {
  int32 batch_size = 1;
  repeated edu.uci.ics.amber.engine.common.ChannelIdentity channels = 2;
  repeated string range_attribute_names = 3;
  int64 range_min = 4;
  int64 range_max = 5;
}

message BroadcastPartitioning{
  int32 batch_size = 1;
  repeated edu.uci.ics.amber.engine.common.ChannelIdentity channels = 2;
}
