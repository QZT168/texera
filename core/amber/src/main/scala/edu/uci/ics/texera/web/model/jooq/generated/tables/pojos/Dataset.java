/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables.pojos;


import edu.uci.ics.texera.web.model.jooq.generated.tables.interfaces.IDataset;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dataset implements IDataset {

    private static final long serialVersionUID = -329685164;

    private UInteger did;
    private String   name;
    private Byte     isPublic;
    private String   storagePath;

    public Dataset() {}

    public Dataset(IDataset value) {
        this.did = value.getDid();
        this.name = value.getName();
        this.isPublic = value.getIsPublic();
        this.storagePath = value.getStoragePath();
    }

    public Dataset(
        UInteger did,
        String   name,
        Byte     isPublic,
        String   storagePath
    ) {
        this.did = did;
        this.name = name;
        this.isPublic = isPublic;
        this.storagePath = storagePath;
    }

    @Override
    public UInteger getDid() {
        return this.did;
    }

    @Override
    public void setDid(UInteger did) {
        this.did = did;
    }

    @Override
    public String getName() {
        return this.name;
    }

    @Override
    public void setName(String name) {
        this.name = name;
    }

    @Override
    public Byte getIsPublic() {
        return this.isPublic;
    }

    @Override
    public void setIsPublic(Byte isPublic) {
        this.isPublic = isPublic;
    }

    @Override
    public String getStoragePath() {
        return this.storagePath;
    }

    @Override
    public void setStoragePath(String storagePath) {
        this.storagePath = storagePath;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Dataset (");

        sb.append(did);
        sb.append(", ").append(name);
        sb.append(", ").append(isPublic);
        sb.append(", ").append(storagePath);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDataset from) {
        setDid(from.getDid());
        setName(from.getName());
        setIsPublic(from.getIsPublic());
        setStoragePath(from.getStoragePath());
    }

    @Override
    public <E extends IDataset> E into(E into) {
        into.from(this);
        return into;
    }
}
