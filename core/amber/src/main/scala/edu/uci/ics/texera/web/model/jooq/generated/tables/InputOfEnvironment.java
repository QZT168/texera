/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables;


import edu.uci.ics.texera.web.model.jooq.generated.Indexes;
import edu.uci.ics.texera.web.model.jooq.generated.Keys;
import edu.uci.ics.texera.web.model.jooq.generated.TexeraDb;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.InputOfEnvironmentRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InputOfEnvironment extends TableImpl<InputOfEnvironmentRecord> {

    private static final long serialVersionUID = -1931027578;

    /**
     * The reference instance of <code>texera_db.input_of_environment</code>
     */
    public static final InputOfEnvironment INPUT_OF_ENVIRONMENT = new InputOfEnvironment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InputOfEnvironmentRecord> getRecordType() {
        return InputOfEnvironmentRecord.class;
    }

    /**
     * The column <code>texera_db.input_of_environment.did</code>.
     */
    public final TableField<InputOfEnvironmentRecord, UInteger> DID = createField(DSL.name("did"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.input_of_environment.eid</code>.
     */
    public final TableField<InputOfEnvironmentRecord, UInteger> EID = createField(DSL.name("eid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.input_of_environment.version_descriptor</code>.
     */
    public final TableField<InputOfEnvironmentRecord, String> VERSION_DESCRIPTOR = createField(DSL.name("version_descriptor"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>texera_db.input_of_environment</code> table reference
     */
    public InputOfEnvironment() {
        this(DSL.name("input_of_environment"), null);
    }

    /**
     * Create an aliased <code>texera_db.input_of_environment</code> table reference
     */
    public InputOfEnvironment(String alias) {
        this(DSL.name(alias), INPUT_OF_ENVIRONMENT);
    }

    /**
     * Create an aliased <code>texera_db.input_of_environment</code> table reference
     */
    public InputOfEnvironment(Name alias) {
        this(alias, INPUT_OF_ENVIRONMENT);
    }

    private InputOfEnvironment(Name alias, Table<InputOfEnvironmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private InputOfEnvironment(Name alias, Table<InputOfEnvironmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> InputOfEnvironment(Table<O> child, ForeignKey<O, InputOfEnvironmentRecord> key) {
        super(child, key, INPUT_OF_ENVIRONMENT);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INPUT_OF_ENVIRONMENT_EID, Indexes.INPUT_OF_ENVIRONMENT_PRIMARY);
    }

    @Override
    public UniqueKey<InputOfEnvironmentRecord> getPrimaryKey() {
        return Keys.KEY_INPUT_OF_ENVIRONMENT_PRIMARY;
    }

    @Override
    public List<UniqueKey<InputOfEnvironmentRecord>> getKeys() {
        return Arrays.<UniqueKey<InputOfEnvironmentRecord>>asList(Keys.KEY_INPUT_OF_ENVIRONMENT_PRIMARY);
    }

    @Override
    public List<ForeignKey<InputOfEnvironmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InputOfEnvironmentRecord, ?>>asList(Keys.INPUT_OF_ENVIRONMENT_IBFK_1);
    }

    public Environment environment() {
        return new Environment(this, Keys.INPUT_OF_ENVIRONMENT_IBFK_1);
    }

    @Override
    public InputOfEnvironment as(String alias) {
        return new InputOfEnvironment(DSL.name(alias), this);
    }

    @Override
    public InputOfEnvironment as(Name alias) {
        return new InputOfEnvironment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InputOfEnvironment rename(String name) {
        return new InputOfEnvironment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public InputOfEnvironment rename(Name name) {
        return new InputOfEnvironment(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
