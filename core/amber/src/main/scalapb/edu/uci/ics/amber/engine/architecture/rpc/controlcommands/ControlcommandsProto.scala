// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.rpc.controlcommands

object ControlcommandsProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    edu.uci.ics.amber.engine.common.workflow.WorkflowProto,
    edu.uci.ics.amber.engine.architecture.worker.statistics.StatisticsProto,
    edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto,
    scalapb.options.ScalapbProto,
    com.google.protobuf.timestamp.TimestampProto,
    com.google.protobuf.any.AnyProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlRequestMessage,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EmptyRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.AsyncRPCContext,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ControlInvocation,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ChannelMarkerPayload,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PropagateChannelMarkerRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.TakeGlobalCheckpointRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkflowReconfigureRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.DebugCommandRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.EvaluatePythonExpressionRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ModifyLogicRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.RetryWorkflowRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessage,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ConsoleMessageTriggeredRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PortCompletedRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.IterationCompletedRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.WorkerStateUpdatedRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.LinkWorkersRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Ping,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pong,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Pass,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Nested,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.MultiCall,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.ErrorCommand,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Collect,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.GenerateNumber,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Chain,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.Recursion,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.AddInputChannelRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.AddPartitioningRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.AssignPortRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.FinalizeCheckpointRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.InitializeExecutorRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.UpdateExecutorRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.PrepareCheckpointRequest,
      edu.uci.ics.amber.engine.architecture.rpc.controlcommands.QueryStatisticsRequest
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """Cj9lZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0ZWN0dXJlL3JwYy9jb250cm9sY29tbWFuZHMucHJvdG8SKWVkdS51Y
  2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjGjVlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvY29tbW9uL3ZpcnR1Y
  WxpZGVudGl0eS5wcm90bxouZWR1L3VjaS9pY3MvYW1iZXIvZW5naW5lL2NvbW1vbi93b3JrZmxvdy5wcm90bxo9ZWR1L3VjaS9pY
  3MvYW1iZXIvZW5naW5lL2FyY2hpdGVjdHVyZS93b3JrZXIvc3RhdGlzdGljcy5wcm90bxpHZWR1L3VjaS9pY3MvYW1iZXIvZW5na
  W5lL2FyY2hpdGVjdHVyZS9zZW5kc2VtYW50aWNzL3BhcnRpdGlvbmluZ3MucHJvdG8aFXNjYWxhcGIvc2NhbGFwYi5wcm90bxofZ
  29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoZZ29vZ2xlL3Byb3RvYnVmL2FueS5wcm90byKnIAoOQ29udHJvbFJlcXVlc
  3QStAEKHXByb3BhZ2F0ZUNoYW5uZWxNYXJrZXJSZXF1ZXN0GAEgASgLMkguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpd
  GVjdHVyZS5ycGMuUHJvcGFnYXRlQ2hhbm5lbE1hcmtlclJlcXVlc3RCIuI/HxIdcHJvcGFnYXRlQ2hhbm5lbE1hcmtlclJlcXVlc
  3RIAFIdcHJvcGFnYXRlQ2hhbm5lbE1hcmtlclJlcXVlc3QSrAEKG3Rha2VHbG9iYWxDaGVja3BvaW50UmVxdWVzdBgCIAEoCzJGL
  mVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLlRha2VHbG9iYWxDaGVja3BvaW50UmVxdWVzdEIg4j8dE
  ht0YWtlR2xvYmFsQ2hlY2twb2ludFJlcXVlc3RIAFIbdGFrZUdsb2JhbENoZWNrcG9pbnRSZXF1ZXN0EowBChNkZWJ1Z0NvbW1hb
  mRSZXF1ZXN0GAMgASgLMj4uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuRGVidWdDb21tYW5kUmVxd
  WVzdEIY4j8VEhNkZWJ1Z0NvbW1hbmRSZXF1ZXN0SABSE2RlYnVnQ29tbWFuZFJlcXVlc3QSvAEKH2V2YWx1YXRlUHl0aG9uRXhwc
  mVzc2lvblJlcXVlc3QYBCABKAsySi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5FdmFsdWF0ZVB5d
  GhvbkV4cHJlc3Npb25SZXF1ZXN0QiTiPyESH2V2YWx1YXRlUHl0aG9uRXhwcmVzc2lvblJlcXVlc3RIAFIfZXZhbHVhdGVQeXRob
  25FeHByZXNzaW9uUmVxdWVzdBKIAQoSbW9kaWZ5TG9naWNSZXF1ZXN0GAUgASgLMj0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lL
  mFyY2hpdGVjdHVyZS5ycGMuTW9kaWZ5TG9naWNSZXF1ZXN0QhfiPxQSEm1vZGlmeUxvZ2ljUmVxdWVzdEgAUhJtb2RpZnlMb2dpY
  1JlcXVlc3QSkAEKFHJldHJ5V29ya2Zsb3dSZXF1ZXN0GAYgASgLMj8uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjd
  HVyZS5ycGMuUmV0cnlXb3JrZmxvd1JlcXVlc3RCGeI/FhIUcmV0cnlXb3JrZmxvd1JlcXVlc3RIAFIUcmV0cnlXb3JrZmxvd1Jlc
  XVlc3QSuAEKHmNvbnNvbGVNZXNzYWdlVHJpZ2dlcmVkUmVxdWVzdBgIIAEoCzJJLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hc
  mNoaXRlY3R1cmUucnBjLkNvbnNvbGVNZXNzYWdlVHJpZ2dlcmVkUmVxdWVzdEIj4j8gEh5jb25zb2xlTWVzc2FnZVRyaWdnZXJlZ
  FJlcXVlc3RIAFIeY29uc29sZU1lc3NhZ2VUcmlnZ2VyZWRSZXF1ZXN0EpABChRwb3J0Q29tcGxldGVkUmVxdWVzdBgJIAEoCzI/L
  mVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLlBvcnRDb21wbGV0ZWRSZXF1ZXN0QhniPxYSFHBvcnRDb
  21wbGV0ZWRSZXF1ZXN0SABSFHBvcnRDb21wbGV0ZWRSZXF1ZXN0EqQBChl3b3JrZXJTdGF0ZVVwZGF0ZWRSZXF1ZXN0GAogASgLM
  kQuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuV29ya2VyU3RhdGVVcGRhdGVkUmVxdWVzdEIe4j8bE
  hl3b3JrZXJTdGF0ZVVwZGF0ZWRSZXF1ZXN0SABSGXdvcmtlclN0YXRlVXBkYXRlZFJlcXVlc3QSiAEKEmxpbmtXb3JrZXJzUmVxd
  WVzdBgLIAEoCzI9LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLkxpbmtXb3JrZXJzUmVxdWVzdEIX4
  j8UEhJsaW5rV29ya2Vyc1JlcXVlc3RIAFISbGlua1dvcmtlcnNSZXF1ZXN0EqQBChlpdGVyYXRpb25Db21wbGV0ZWRSZXF1ZXN0G
  AwgASgLMkQuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuSXRlcmF0aW9uQ29tcGxldGVkUmVxdWVzd
  EIe4j8bEhlpdGVyYXRpb25Db21wbGV0ZWRSZXF1ZXN0SABSGWl0ZXJhdGlvbkNvbXBsZXRlZFJlcXVlc3QSmAEKFmFkZElucHV0Q
  2hhbm5lbFJlcXVlc3QYMiABKAsyQS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5BZGRJbnB1dENoY
  W5uZWxSZXF1ZXN0QhviPxgSFmFkZElucHV0Q2hhbm5lbFJlcXVlc3RIAFIWYWRkSW5wdXRDaGFubmVsUmVxdWVzdBKYAQoWYWRkU
  GFydGl0aW9uaW5nUmVxdWVzdBgzIAEoCzJBLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLkFkZFBhc
  nRpdGlvbmluZ1JlcXVlc3RCG+I/GBIWYWRkUGFydGl0aW9uaW5nUmVxdWVzdEgAUhZhZGRQYXJ0aXRpb25pbmdSZXF1ZXN0EoQBC
  hFhc3NpZ25Qb3J0UmVxdWVzdBg0IAEoCzI8LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLkFzc2lnb
  lBvcnRSZXF1ZXN0QhbiPxMSEWFzc2lnblBvcnRSZXF1ZXN0SABSEWFzc2lnblBvcnRSZXF1ZXN0EqQBChlmaW5hbGl6ZUNoZWNrc
  G9pbnRSZXF1ZXN0GDUgASgLMkQuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuRmluYWxpemVDaGVja
  3BvaW50UmVxdWVzdEIe4j8bEhlmaW5hbGl6ZUNoZWNrcG9pbnRSZXF1ZXN0SABSGWZpbmFsaXplQ2hlY2twb2ludFJlcXVlc3QSp
  AEKGWluaXRpYWxpemVFeGVjdXRvclJlcXVlc3QYNiABKAsyRC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlL
  nJwYy5Jbml0aWFsaXplRXhlY3V0b3JSZXF1ZXN0Qh7iPxsSGWluaXRpYWxpemVFeGVjdXRvclJlcXVlc3RIAFIZaW5pdGlhbGl6Z
  UV4ZWN1dG9yUmVxdWVzdBKUAQoVdXBkYXRlRXhlY3V0b3JSZXF1ZXN0GDcgASgLMkAuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lL
  mFyY2hpdGVjdHVyZS5ycGMuVXBkYXRlRXhlY3V0b3JSZXF1ZXN0QhriPxcSFXVwZGF0ZUV4ZWN1dG9yUmVxdWVzdEgAUhV1cGRhd
  GVFeGVjdXRvclJlcXVlc3QScAoMZW1wdHlSZXF1ZXN0GDggASgLMjcuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjd
  HVyZS5ycGMuRW1wdHlSZXF1ZXN0QhHiPw4SDGVtcHR5UmVxdWVzdEgAUgxlbXB0eVJlcXVlc3QSoAEKGHByZXBhcmVDaGVja3Bva
  W50UmVxdWVzdBg5IAEoCzJDLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLlByZXBhcmVDaGVja3Bva
  W50UmVxdWVzdEId4j8aEhhwcmVwYXJlQ2hlY2twb2ludFJlcXVlc3RIAFIYcHJlcGFyZUNoZWNrcG9pbnRSZXF1ZXN0EpgBChZxd
  WVyeVN0YXRpc3RpY3NSZXF1ZXN0GDogASgLMkEuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuUXVlc
  nlTdGF0aXN0aWNzUmVxdWVzdEIb4j8YEhZxdWVyeVN0YXRpc3RpY3NSZXF1ZXN0SABSFnF1ZXJ5U3RhdGlzdGljc1JlcXVlc3QSU
  AoEcGluZxhkIAEoCzIvLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLlBpbmdCCeI/BhIEcGluZ0gAU
  gRwaW5nElAKBHBvbmcYZSABKAsyLy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5Qb25nQgniPwYSB
  HBvbmdIAFIEcG9uZxJYCgZuZXN0ZWQYZiABKAsyMS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5OZ
  XN0ZWRCC+I/CBIGbmVzdGVkSABSBm5lc3RlZBJQCgRwYXNzGGcgASgLMi8uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpd
  GVjdHVyZS5ycGMuUGFzc0IJ4j8GEgRwYXNzSABSBHBhc3MScAoMZXJyb3JDb21tYW5kGGggASgLMjcuZWR1LnVjaS5pY3MuYW1iZ
  XIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuRXJyb3JDb21tYW5kQhHiPw4SDGVycm9yQ29tbWFuZEgAUgxlcnJvckNvbW1hbmQSZ
  AoJcmVjdXJzaW9uGGkgASgLMjQuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuUmVjdXJzaW9uQg7iP
  wsSCXJlY3Vyc2lvbkgAUglyZWN1cnNpb24SXAoHY29sbGVjdBhqIAEoCzIyLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoa
  XRlY3R1cmUucnBjLkNvbGxlY3RCDOI/CRIHY29sbGVjdEgAUgdjb2xsZWN0EngKDmdlbmVyYXRlTnVtYmVyGGsgASgLMjkuZWR1L
  nVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuR2VuZXJhdGVOdW1iZXJCE+I/EBIOZ2VuZXJhdGVOdW1iZXJIA
  FIOZ2VuZXJhdGVOdW1iZXISZAoJbXVsdGlDYWxsGGwgASgLMjQuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZ
  S5ycGMuTXVsdGlDYWxsQg7iPwsSCW11bHRpQ2FsbEgAUgltdWx0aUNhbGwSVAoFY2hhaW4YbSABKAsyMC5lZHUudWNpLmljcy5hb
  WJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5DaGFpbkIK4j8HEgVjaGFpbkgAUgVjaGFpbkIOCgxzZWFsZWRfdmFsdWUiDgoMR
  W1wdHlSZXF1ZXN0ItwBCg9Bc3luY1JQQ0NvbnRleHQSXQoGc2VuZGVyGAEgASgLMjUuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lL
  mNvbW1vbi5BY3RvclZpcnR1YWxJZGVudGl0eUIO4j8LEgZzZW5kZXLwAQFSBnNlbmRlchJjCghyZWNlaXZlchgCIAEoCzI1LmVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uQWN0b3JWaXJ0dWFsSWRlbnRpdHlCEOI/DRIIcmVjZWl2ZXLwAQFSCHJlY2Vpd
  mVyOgXiPwI4ASL+AgoRQ29udHJvbEludm9jYXRpb24SLwoKbWV0aG9kTmFtZRgBIAEoCUIP4j8MEgptZXRob2ROYW1lUgptZXRob
  2ROYW1lEmQKB2NvbW1hbmQYAiABKAsyOS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5Db250cm9sU
  mVxdWVzdEIP4j8MEgdjb21tYW5k8AEBUgdjb21tYW5kEmIKB2NvbnRleHQYAyABKAsyOi5lZHUudWNpLmljcy5hbWJlci5lbmdpb
  mUuYXJjaGl0ZWN0dXJlLnJwYy5Bc3luY1JQQ0NvbnRleHRCDOI/CRIHY29udGV4dFIHY29udGV4dBIsCgljb21tYW5kSWQYBCABK
  ANCDuI/CxIJY29tbWFuZElkUgljb21tYW5kSWQ6QOI/PQo7ZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5hbWJlcm1lc
  3NhZ2UuQ29udHJvbFBheWxvYWQipgUKFENoYW5uZWxNYXJrZXJQYXlsb2FkElIKAmlkGAEgASgLMjYuZWR1LnVjaS5pY3MuYW1iZ
  XIuZW5naW5lLmNvbW1vbi5DaGFubmVsTWFya2VySWRlbnRpdHlCCuI/BxICaWTwAQFSAmlkEm0KCm1hcmtlclR5cGUYAiABKA4yP
  C5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5DaGFubmVsTWFya2VyVHlwZUIP4j8MEgptYXJrZXJUe
  XBlUgptYXJrZXJUeXBlElIKBXNjb3BlGAMgAygLMjAuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5DaGFubmVsSWRlb
  nRpdHlCCuI/BxIFc2NvcGVSBXNjb3BlEpABCg5jb21tYW5kTWFwcGluZxgEIAMoCzJTLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZ
  S5hcmNoaXRlY3R1cmUucnBjLkNoYW5uZWxNYXJrZXJQYXlsb2FkLkNvbW1hbmRNYXBwaW5nRW50cnlCE+I/EBIOY29tbWFuZE1hc
  HBpbmdSDmNvbW1hbmRNYXBwaW5nGpUBChNDb21tYW5kTWFwcGluZ0VudHJ5EhoKA2tleRgBIAEoCUII4j8FEgNrZXlSA2tleRJeC
  gV2YWx1ZRgCIAEoCzI8LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLkNvbnRyb2xJbnZvY2F0aW9uQ
  griPwcSBXZhbHVlUgV2YWx1ZToCOAE6TOI/SQpHZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5hbWJlcm1lc3NhZ2UuV
  29ya2Zsb3dGSUZPTWVzc2FnZVBheWxvYWQi1QUKHVByb3BhZ2F0ZUNoYW5uZWxNYXJrZXJSZXF1ZXN0En8KE3NvdXJjZU9wVG9Td
  GFydFByb3AYASADKAsyMy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLlBoeXNpY2FsT3BJZGVudGl0eUIY4j8VEhNzb
  3VyY2VPcFRvU3RhcnRQcm9wUhNzb3VyY2VPcFRvU3RhcnRQcm9wElIKAmlkGAIgASgLMjYuZWR1LnVjaS5pY3MuYW1iZXIuZW5na
  W5lLmNvbW1vbi5DaGFubmVsTWFya2VySWRlbnRpdHlCCuI/BxICaWTwAQFSAmlkEm0KCm1hcmtlclR5cGUYAyABKA4yPC5lZHUud
  WNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5DaGFubmVsTWFya2VyVHlwZUIP4j8MEgptYXJrZXJUeXBlUgptY
  XJrZXJUeXBlElUKBXNjb3BlGAQgAygLMjMuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5QaHlzaWNhbE9wSWRlbnRpd
  HlCCuI/BxIFc2NvcGVSBXNjb3BlEmEKCXRhcmdldE9wcxgFIAMoCzIzLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uU
  Gh5c2ljYWxPcElkZW50aXR5Qg7iPwsSCXRhcmdldE9wc1IJdGFyZ2V0T3BzEnMKDW1hcmtlckNvbW1hbmQYBiABKAsyOS5lZHUud
  WNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5Db250cm9sUmVxdWVzdEIS4j8PEg1tYXJrZXJDb21tYW5kUg1tY
  XJrZXJDb21tYW5kEkEKEG1hcmtlck1ldGhvZE5hbWUYByABKAlCFeI/EhIQbWFya2VyTWV0aG9kTmFtZVIQbWFya2VyTWV0aG9kT
  mFtZSKAAgobVGFrZUdsb2JhbENoZWNrcG9pbnRSZXF1ZXN0EjsKDmVzdGltYXRpb25Pbmx5GAEgASgIQhPiPxASDmVzdGltYXRpb
  25Pbmx5Ug5lc3RpbWF0aW9uT25seRJwCgxjaGVja3BvaW50SWQYAiABKAsyNi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tb
  W9uLkNoYW5uZWxNYXJrZXJJZGVudGl0eUIU4j8REgxjaGVja3BvaW50SWTwAQFSDGNoZWNrcG9pbnRJZBIyCgtkZXN0aW5hdGlvb
  hgDIAEoCUIQ4j8NEgtkZXN0aW5hdGlvblILZGVzdGluYXRpb24i5QEKGldvcmtmbG93UmVjb25maWd1cmVSZXF1ZXN0EoABCg9yZ
  WNvbmZpZ3VyYXRpb24YASABKAsyPS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLnJwYy5Nb2RpZnlMb2dpY
  1JlcXVlc3RCF+I/FBIPcmVjb25maWd1cmF0aW9u8AEBUg9yZWNvbmZpZ3VyYXRpb24SRAoRcmVjb25maWd1cmF0aW9uSWQYAiABK
  AlCFuI/ExIRcmVjb25maWd1cmF0aW9uSWRSEXJlY29uZmlndXJhdGlvbklkIlwKE0RlYnVnQ29tbWFuZFJlcXVlc3QSKQoId29ya
  2VySWQYASABKAlCDeI/ChIId29ya2VySWRSCHdvcmtlcklkEhoKA2NtZBgCIAEoCUII4j8FEgNjbWRSA2NtZCKDAQofRXZhbHVhd
  GVQeXRob25FeHByZXNzaW9uUmVxdWVzdBIvCgpleHByZXNzaW9uGAEgASgJQg/iPwwSCmV4cHJlc3Npb25SCmV4cHJlc3Npb24SL
  woKb3BlcmF0b3JJZBgCIAEoCUIP4j8MEgpvcGVyYXRvcklkUgpvcGVyYXRvcklkIpABChJNb2RpZnlMb2dpY1JlcXVlc3QSegoNd
  XBkYXRlUmVxdWVzdBgBIAMoCzJALmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLlVwZGF0ZUV4ZWN1d
  G9yUmVxdWVzdEIS4j8PEg11cGRhdGVSZXF1ZXN0Ug11cGRhdGVSZXF1ZXN0InUKFFJldHJ5V29ya2Zsb3dSZXF1ZXN0El0KB3dvc
  mtlcnMYASADKAsyNS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLkFjdG9yVmlydHVhbElkZW50aXR5QgziPwkSB3dvc
  mtlcnNSB3dvcmtlcnMiowMKDkNvbnNvbGVNZXNzYWdlEioKCXdvcmtlcl9pZBgBIAEoCUIN4j8KEgh3b3JrZXJJZFIId29ya2VyS
  WQSSwoJdGltZXN0YW1wGAIgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIR4j8OEgl0aW1lc3RhbXDwAQFSCXRpbWVzd
  GFtcBJmCghtc2dfdHlwZRgDIAEoDjI9LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUucnBjLkNvbnNvbGVNZ
  XNzYWdlVHlwZUIM4j8JEgdtc2dUeXBlUgdtc2dUeXBlEiMKBnNvdXJjZRgEIAEoCUIL4j8IEgZzb3VyY2VSBnNvdXJjZRIgCgV0a
  XRsZRgFIAEoCUIK4j8HEgV0aXRsZVIFdGl0bGUSJgoHbWVzc2FnZRgGIAEoCUIM4j8JEgdtZXNzYWdlUgdtZXNzYWdlOkHiPz4KP
  GVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUuY29udHJvbGxlci5DbGllbnRFdmVudCKbAQoeQ29uc29sZU1lc
  3NhZ2VUcmlnZ2VyZWRSZXF1ZXN0EnkKDmNvbnNvbGVNZXNzYWdlGAEgASgLMjkuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY
  2hpdGVjdHVyZS5ycGMuQ29uc29sZU1lc3NhZ2VCFuI/ExIOY29uc29sZU1lc3NhZ2XwAQFSDmNvbnNvbGVNZXNzYWdlIo8BChRQb
  3J0Q29tcGxldGVkUmVxdWVzdBJVCgZwb3J0SWQYASABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLlBvcnRJZ
  GVudGl0eUIO4j8LEgZwb3J0SWTwAQFSBnBvcnRJZBIgCgVpbnB1dBgCIAEoCEIK4j8HEgVpbnB1dFIFaW5wdXQi/QEKGUl0ZXJhd
  GlvbkNvbXBsZXRlZFJlcXVlc3QScgoNc3RhcnRXb3JrZXJJZBgBIAEoCzI1LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb
  24uQWN0b3JWaXJ0dWFsSWRlbnRpdHlCFeI/EhINc3RhcnRXb3JrZXJJZPABAVINc3RhcnRXb3JrZXJJZBJsCgtlbmRXb3JrZXJJZ
  BgCIAEoCzI1LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uQWN0b3JWaXJ0dWFsSWRlbnRpdHlCE+I/EBILZW5kV29ya
  2VySWTwAQFSC2VuZFdvcmtlcklkInsKGVdvcmtlclN0YXRlVXBkYXRlZFJlcXVlc3QSXgoFc3RhdGUYASABKA4yOS5lZHUudWNpL
  mljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Xb3JrZXJTdGF0ZUIN4j8KEgVzdGF0ZfABAVIFc3RhdGUiZQoST
  Glua1dvcmtlcnNSZXF1ZXN0Ek8KBGxpbmsYASABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLlBoeXNpY2FsT
  Glua0IM4j8JEgRsaW5r8AEBUgRsaW5rIosBCgRQaW5nEhQKAWkYASABKAVCBuI/AxIBaVIBaRIaCgNlbmQYAiABKAVCCOI/BRIDZ
  W5kUgNlbmQSUQoCdG8YAyABKAsyNS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLkFjdG9yVmlydHVhbElkZW50aXR5Q
  griPwcSAnRv8AEBUgJ0byKLAQoEUG9uZxIUCgFpGAEgASgFQgbiPwMSAWlSAWkSGgoDZW5kGAIgASgFQgjiPwUSA2VuZFIDZW5kE
  lEKAnRvGAMgASgLMjUuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5BY3RvclZpcnR1YWxJZGVudGl0eUIK4j8HEgJ0b
  /ABAVICdG8iKAoEUGFzcxIgCgV2YWx1ZRgBIAEoCUIK4j8HEgV2YWx1ZVIFdmFsdWUiHgoGTmVzdGVkEhQKAWsYASABKAVCBuI/A
  xIBa1IBayJeCglNdWx0aUNhbGwSUQoDc2VxGAEgAygLMjUuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5BY3RvclZpc
  nR1YWxJZGVudGl0eUII4j8FEgNzZXFSA3NlcSIOCgxFcnJvckNvbW1hbmQiaAoHQ29sbGVjdBJdCgd3b3JrZXJzGAEgAygLMjUuZ
  WR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5BY3RvclZpcnR1YWxJZGVudGl0eUIM4j8JEgd3b3JrZXJzUgd3b3JrZXJzI
  hAKDkdlbmVyYXRlTnVtYmVyImAKBUNoYWluElcKBW5leHRzGAEgAygLMjUuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vb
  i5BY3RvclZpcnR1YWxJZGVudGl0eUIK4j8HEgVuZXh0c1IFbmV4dHMiIQoJUmVjdXJzaW9uEhQKAWkYASABKAVCBuI/AxIBaVIBa
  SLSAQoWQWRkSW5wdXRDaGFubmVsUmVxdWVzdBJhCgljaGFubmVsSWQYASABKAsyMC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY
  29tbW9uLkNoYW5uZWxJZGVudGl0eUIR4j8OEgljaGFubmVsSWTwAQFSCWNoYW5uZWxJZBJVCgZwb3J0SWQYAiABKAsyLS5lZHUud
  WNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLlBvcnRJZGVudGl0eUIO4j8LEgZwb3J0SWTwAQFSBnBvcnRJZCLjAQoWQWRkUGFyd
  Gl0aW9uaW5nUmVxdWVzdBJMCgN0YWcYASABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLlBoeXNpY2FsTGlua
  0IL4j8IEgN0YWfwAQFSA3RhZxJ7CgxwYXJ0aXRpb25pbmcYAiABKAsyQS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0Z
  WN0dXJlLnNlbmRzZW1hbnRpY3MuUGFydGl0aW9uaW5nQhTiPxESDHBhcnRpdGlvbmluZ/ABAVIMcGFydGl0aW9uaW5nIswCChFBc
  3NpZ25Qb3J0UmVxdWVzdBJVCgZwb3J0SWQYASABKAsyLS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLlBvcnRJZGVud
  Gl0eUIO4j8LEgZwb3J0SWTwAQFSBnBvcnRJZBIgCgVpbnB1dBgCIAEoCEIK4j8HEgVpbnB1dFIFaW5wdXQSbQoGc2NoZW1hGAMgA
  ygLMkguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS5ycGMuQXNzaWduUG9ydFJlcXVlc3QuU2NoZW1hRW50c
  nlCC+I/CBIGc2NoZW1hUgZzY2hlbWEaTwoLU2NoZW1hRW50cnkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlG
  AIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEitQEKGUZpbmFsaXplQ2hlY2twb2ludFJlcXVlc3QScAoMY2hlY2twb2ludElkG
  AEgASgLMjYuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5DaGFubmVsTWFya2VySWRlbnRpdHlCFOI/ERIMY2hlY2twb
  2ludElk8AEBUgxjaGVja3BvaW50SWQSJgoHd3JpdGVUbxgCIAEoCUIM4j8JEgd3cml0ZVRvUgd3cml0ZVRvIooCChlJbml0aWFsa
  XplRXhlY3V0b3JSZXF1ZXN0EkEKEHRvdGFsV29ya2VyQ291bnQYASABKAVCFeI/EhIQdG90YWxXb3JrZXJDb3VudFIQdG90YWxXb
  3JrZXJDb3VudBJUCg5vcEV4ZWNJbml0SW5mbxgCIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCFuI/ExIOb3BFeGVjSW5pdEluZ
  m/wAQFSDm9wRXhlY0luaXRJbmZvEikKCGlzU291cmNlGAMgASgIQg3iPwoSCGlzU291cmNlUghpc1NvdXJjZRIpCghsYW5ndWFnZ
  RgEIAEoCUIN4j8KEghsYW5ndWFnZVIIbGFuZ3VhZ2UiqQIKFVVwZGF0ZUV4ZWN1dG9yUmVxdWVzdBJnCgp0YXJnZXRPcElkGAEgA
  SgLMjMuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmNvbW1vbi5QaHlzaWNhbE9wSWRlbnRpdHlCEuI/DxIKdGFyZ2V0T3BJZPABA
  VIKdGFyZ2V0T3BJZBJLCgtuZXdFeGVjdXRvchgCIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCE+I/EBILbmV3RXhlY3V0b3LwA
  QFSC25ld0V4ZWN1dG9yEloKEXN0YXRlVHJhbnNmZXJGdW5jGAMgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUIW4j8TEhFzdGF0Z
  VRyYW5zZmVyRnVuY1IRc3RhdGVUcmFuc2ZlckZ1bmMiyQEKGFByZXBhcmVDaGVja3BvaW50UmVxdWVzdBJwCgxjaGVja3BvaW50S
  WQYASABKAsyNi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLkNoYW5uZWxNYXJrZXJJZGVudGl0eUIU4j8REgxjaGVja
  3BvaW50SWTwAQFSDGNoZWNrcG9pbnRJZBI7Cg5lc3RpbWF0aW9uT25seRgCIAEoCEIT4j8QEg5lc3RpbWF0aW9uT25seVIOZXN0a
  W1hdGlvbk9ubHkijwEKFlF1ZXJ5U3RhdGlzdGljc1JlcXVlc3QSdQoPZmlsdGVyQnlXb3JrZXJzGAEgAygLMjUuZWR1LnVjaS5pY
  3MuYW1iZXIuZW5naW5lLmNvbW1vbi5BY3RvclZpcnR1YWxJZGVudGl0eUIU4j8REg9maWx0ZXJCeVdvcmtlcnNSD2ZpbHRlckJ5V
  29ya2VycypnChFDaGFubmVsTWFya2VyVHlwZRItChFSRVFVSVJFX0FMSUdOTUVOVBAAGhbiPxMSEVJFUVVJUkVfQUxJR05NRU5UE
  iMKDE5PX0FMSUdOTUVOVBABGhHiPw4SDE5PX0FMSUdOTUVOVCp6ChJDb25zb2xlTWVzc2FnZVR5cGUSFQoFUFJJTlQQABoK4j8HE
  gVQUklOVBIVCgVFUlJPUhABGgriPwcSBUVSUk9SEhkKB0NPTU1BTkQQAhoM4j8JEgdDT01NQU5EEhsKCERFQlVHR0VSEAMaDeI/C
  hIIREVCVUdHRVJCCeI/BkgAWAB4AWIGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.workflow.WorkflowProto.javaDescriptor,
      edu.uci.ics.amber.engine.architecture.worker.statistics.StatisticsProto.javaDescriptor,
      edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      com.google.protobuf.any.AnyProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}