// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.worker.workercallservice

object WorkercallserviceProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq(
    edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto,
    edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto,
    com.google.protobuf.timestamp.TimestampProto,
    com.google.protobuf.empty.EmptyProto,
    scalapb.options.ScalapbProto
  )
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.EvaluatePythonExpressionRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.EvaluatePythonExpressionResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.UpdateInputLinkingResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.OpenOperatorResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.SharePartitionResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.SendImmutableStateResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.SchedulerTimeSlotEventResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.ResumeWorkerResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.PauseWorkerResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.StartWorkerRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.QueryCurrentInputTupleResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.QueryAndRemoveBreakpointsResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.PauseSkewMitigationResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.MonitorWorkerStateResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.ModifyOperatorLogicResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.AssignLocalBreakpointResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.AddPartitioningResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.AcceptImmutableStateResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.WorkerPropagateEpochMarkerRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.ShutdownDPThreadEvent,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.SharePartitionRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.SendImmutableStateRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.QueryStatisticsRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.QueryStatisticsResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.QueryCurrentInputTupleRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.QueryAndRemoveBreakpointsRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.PauseSkewMitigationRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.MonitorWorkerStateRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.FlushNetworkBufferEvent,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.BackPressureEvent,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.AssignLocalBreakpointRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.AcceptImmutableStateRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.StartWorkerResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.PauseWorkerRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.ResumeWorkerRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.DebugCommandRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.DebugCommandResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.SchedulerTimeSlotEventRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.OpenOperatorRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.UpdateInputLinkingRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.AddPartitioningRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.LinkOrdinal,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.InitializeOperatorLogicRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.InitializeOperatorLogicResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.ModifyOperatorLogicRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.RetryTupleRequest,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.RetryTupleResponse,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.CurrentInputTupleInfo,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.ControlException,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.TypedValue,
      edu.uci.ics.amber.engine.architecture.worker.workercallservice.EvaluatedValue
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """CkRlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvYXJjaGl0ZWN0dXJlL3dvcmtlci93b3JrZXJjYWxsc2VydmljZS5wcm90bxIsZ
  WR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIaR2VkdS91Y2kvaWNzL2FtYmVyL2VuZ2luZS9hcmNoa
  XRlY3R1cmUvc2VuZHNlbWFudGljcy9wYXJ0aXRpb25pbmdzLnByb3RvGjVlZHUvdWNpL2ljcy9hbWJlci9lbmdpbmUvY29tbW9uL
  3ZpcnR1YWxpZGVudGl0eS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2Vtc
  HR5LnByb3RvGhVzY2FsYXBiL3NjYWxhcGIucHJvdG8iUgofRXZhbHVhdGVQeXRob25FeHByZXNzaW9uUmVxdWVzdBIvCgpleHByZ
  XNzaW9uGAEgASgJQg/iPwwSCmV4cHJlc3Npb25SCmV4cHJlc3Npb24iIgogRXZhbHVhdGVQeXRob25FeHByZXNzaW9uUmVzcG9uc
  2UiHAoaVXBkYXRlSW5wdXRMaW5raW5nUmVzcG9uc2UiFgoUT3Blbk9wZXJhdG9yUmVzcG9uc2UiGAoWU2hhcmVQYXJ0aXRpb25SZ
  XNwb25zZSIcChpTZW5kSW1tdXRhYmxlU3RhdGVSZXNwb25zZSIgCh5TY2hlZHVsZXJUaW1lU2xvdEV2ZW50UmVzcG9uc2UiFgoUU
  mVzdW1lV29ya2VyUmVzcG9uc2UiFQoTUGF1c2VXb3JrZXJSZXNwb25zZSIUChJTdGFydFdvcmtlclJlcXVlc3QiIAoeUXVlcnlDd
  XJyZW50SW5wdXRUdXBsZVJlc3BvbnNlIiMKIVF1ZXJ5QW5kUmVtb3ZlQnJlYWtwb2ludHNSZXNwb25zZSIdChtQYXVzZVNrZXdNa
  XRpZ2F0aW9uUmVzcG9uc2UiHAoaTW9uaXRvcldvcmtlclN0YXRlUmVzcG9uc2UiHQobTW9kaWZ5T3BlcmF0b3JMb2dpY1Jlc3Bvb
  nNlIh8KHUFzc2lnbkxvY2FsQnJlYWtwb2ludFJlc3BvbnNlIhkKF0FkZFBhcnRpdGlvbmluZ1Jlc3BvbnNlIh4KHEFjY2VwdEltb
  XV0YWJsZVN0YXRlUmVzcG9uc2UiIwohV29ya2VyUHJvcGFnYXRlRXBvY2hNYXJrZXJSZXF1ZXN0IhcKFVNodXRkb3duRFBUaHJlY
  WRFdmVudCIXChVTaGFyZVBhcnRpdGlvblJlcXVlc3QiGwoZU2VuZEltbXV0YWJsZVN0YXRlUmVxdWVzdCIYChZRdWVyeVN0YXRpc
  3RpY3NSZXF1ZXN0IhkKF1F1ZXJ5U3RhdGlzdGljc1Jlc3BvbnNlIh8KHVF1ZXJ5Q3VycmVudElucHV0VHVwbGVSZXF1ZXN0IiIKI
  FF1ZXJ5QW5kUmVtb3ZlQnJlYWtwb2ludHNSZXF1ZXN0IhwKGlBhdXNlU2tld01pdGlnYXRpb25SZXF1ZXN0IhsKGU1vbml0b3JXb
  3JrZXJTdGF0ZVJlcXVlc3QiGQoXRmx1c2hOZXR3b3JrQnVmZmVyRXZlbnQiEwoRQmFja1ByZXNzdXJlRXZlbnQiHgocQXNzaWduT
  G9jYWxCcmVha3BvaW50UmVxdWVzdCIdChtBY2NlcHRJbW11dGFibGVTdGF0ZVJlcXVlc3QiFQoTU3RhcnRXb3JrZXJSZXNwb25zZ
  SIUChJQYXVzZVdvcmtlclJlcXVlc3QiFQoTUmVzdW1lV29ya2VyUmVxdWVzdCIxChNEZWJ1Z0NvbW1hbmRSZXF1ZXN0EhoKA2NtZ
  BgBIAEoCUII4j8FEgNjbWRSA2NtZCIWChREZWJ1Z0NvbW1hbmRSZXNwb25zZSJhCh1TY2hlZHVsZXJUaW1lU2xvdEV2ZW50UmVxd
  WVzdBJAChF0aW1lX3Nsb3RfZXhwaXJlZBgBIAEoCEIU4j8REg90aW1lU2xvdEV4cGlyZWRSD3RpbWVTbG90RXhwaXJlZCIVChNPc
  GVuT3BlcmF0b3JSZXF1ZXN0IucBChlVcGRhdGVJbnB1dExpbmtpbmdSZXF1ZXN0EmkKCmlkZW50aWZpZXIYASABKAsyNS5lZHUud
  WNpLmljcy5hbWJlci5lbmdpbmUuY29tbW9uLkFjdG9yVmlydHVhbElkZW50aXR5QhLiPw8SCmlkZW50aWZpZXLwAQFSCmlkZW50a
  WZpZXISXwoKaW5wdXRfbGluaxgCIAEoCzItLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uTGlua0lkZW50aXR5QhHiP
  w4SCWlucHV0TGlua/ABAVIJaW5wdXRMaW5rIuMBChZBZGRQYXJ0aXRpb25pbmdSZXF1ZXN0EkwKA3RhZxgBIAEoCzItLmVkdS51Y
  2kuaWNzLmFtYmVyLmVuZ2luZS5jb21tb24uTGlua0lkZW50aXR5QgviPwgSA3RhZ/ABAVIDdGFnEnsKDHBhcnRpdGlvbmluZxgCI
  AEoCzJBLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUuc2VuZHNlbWFudGljcy5QYXJ0aXRpb25pbmdCFOI/E
  RIMcGFydGl0aW9uaW5n8AEBUgxwYXJ0aXRpb25pbmcimgEKC0xpbmtPcmRpbmFsElYKB2xpbmtfaWQYASABKAsyLS5lZHUudWNpL
  mljcy5hbWJlci5lbmdpbmUuY29tbW9uLkxpbmtJZGVudGl0eUIO4j8LEgZsaW5rSWTwAQFSBmxpbmtJZBIzCgxwb3J0X29yZGluY
  WwYAiABKANCEOI/DRILcG9ydE9yZGluYWxSC3BvcnRPcmRpbmFsIvIECh5Jbml0aWFsaXplT3BlcmF0b3JMb2dpY1JlcXVlc3QSH
  QoEY29kZRgBIAEoCUIJ4j8GEgRjb2RlUgRjb2RlEioKCWlzX3NvdXJjZRgCIAEoCEIN4j8KEghpc1NvdXJjZVIIaXNTb3VyY2USh
  wEKFWlucHV0X29yZGluYWxfbWFwcGluZxgDIAMoCzI5LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya
  2VyLkxpbmtPcmRpbmFsQhjiPxUSE2lucHV0T3JkaW5hbE1hcHBpbmdSE2lucHV0T3JkaW5hbE1hcHBpbmcSigEKFm91dHB1dF9vc
  mRpbmFsX21hcHBpbmcYBCADKAsyOS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5MaW5rT3Jka
  W5hbEIZ4j8WEhRvdXRwdXRPcmRpbmFsTWFwcGluZ1IUb3V0cHV0T3JkaW5hbE1hcHBpbmcSlgEKDW91dHB1dF9zY2hlbWEYBSADK
  AsyXi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Jbml0aWFsaXplT3BlcmF0b3JMb2dpY1Jlc
  XVlc3QuT3V0cHV0U2NoZW1hRW50cnlCEeI/DhIMb3V0cHV0U2NoZW1hUgxvdXRwdXRTY2hlbWEaVQoRT3V0cHV0U2NoZW1hRW50c
  nkSGgoDa2V5GAEgASgJQgjiPwUSA2tleVIDa2V5EiAKBXZhbHVlGAIgASgJQgriPwcSBXZhbHVlUgV2YWx1ZToCOAEiIQofSW5pd
  GlhbGl6ZU9wZXJhdG9yTG9naWNSZXNwb25zZSJnChpNb2RpZnlPcGVyYXRvckxvZ2ljUmVxdWVzdBIdCgRjb2RlGAEgASgJQgniP
  wYSBGNvZGVSBGNvZGUSKgoJaXNfc291cmNlGAIgASgIQg3iPwoSCGlzU291cmNlUghpc1NvdXJjZSITChFSZXRyeVR1cGxlUmVxd
  WVzdCIUChJSZXRyeVR1cGxlUmVzcG9uc2UiFwoVQ3VycmVudElucHV0VHVwbGVJbmZvIi4KEENvbnRyb2xFeGNlcHRpb24SGgoDb
  XNnGAEgASgJQgjiPwUSA21zZ1IDbXNnIvUBCgpUeXBlZFZhbHVlEi8KCmV4cHJlc3Npb24YASABKAlCD+I/DBIKZXhwcmVzc2lvb
  lIKZXhwcmVzc2lvbhIqCgl2YWx1ZV9yZWYYAiABKAlCDeI/ChIIdmFsdWVSZWZSCHZhbHVlUmVmEioKCXZhbHVlX3N0chgDIAEoC
  UIN4j8KEgh2YWx1ZVN0clIIdmFsdWVTdHISLQoKdmFsdWVfdHlwZRgEIAEoCUIO4j8LEgl2YWx1ZVR5cGVSCXZhbHVlVHlwZRIvC
  gpleHBhbmRhYmxlGAUgASgIQg/iPwwSCmV4cGFuZGFibGVSCmV4cGFuZGFibGUi1wEKDkV2YWx1YXRlZFZhbHVlEloKBXZhbHVlG
  AEgASgLMjguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuVHlwZWRWYWx1ZUIK4j8HEgV2YWx1Z
  VIFdmFsdWUSaQoKYXR0cmlidXRlcxgCIAMoCzI4LmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyL
  lR5cGVkVmFsdWVCD+I/DBIKYXR0cmlidXRlc1IKYXR0cmlidXRlczKpHwoRV29ya2VyQ2FsbFNlcnZpY2USrQEKFEFjY2VwdEltb
  XV0YWJsZVN0YXRlEkkuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuQWNjZXB0SW1tdXRhYmxlU
  3RhdGVSZXF1ZXN0GkouZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuQWNjZXB0SW1tdXRhYmxlU
  3RhdGVSZXNwb25zZRKeAQoPQWRkUGFydGl0aW9uaW5nEkQuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b
  3JrZXIuQWRkUGFydGl0aW9uaW5nUmVxdWVzdBpFLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyL
  kFkZFBhcnRpdGlvbmluZ1Jlc3BvbnNlErABChVBc3NpZ25Mb2NhbEJyZWFrcG9pbnQSSi5lZHUudWNpLmljcy5hbWJlci5lbmdpb
  mUuYXJjaGl0ZWN0dXJlLndvcmtlci5Bc3NpZ25Mb2NhbEJyZWFrcG9pbnRSZXF1ZXN0GksuZWR1LnVjaS5pY3MuYW1iZXIuZW5na
  W5lLmFyY2hpdGVjdHVyZS53b3JrZXIuQXNzaWduTG9jYWxCcmVha3BvaW50UmVzcG9uc2USZwoMQmFja1ByZXNzdXJlEj8uZWR1L
  nVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuQmFja1ByZXNzdXJlRXZlbnQaFi5nb29nbGUucHJvdG9id
  WYuRW1wdHkScwoSRmx1c2hOZXR3b3JrQnVmZmVyEkUuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZ
  XIuRmx1c2hOZXR3b3JrQnVmZmVyRXZlbnQaFi5nb29nbGUucHJvdG9idWYuRW1wdHkSqgEKE01vZGlmeU9wZXJhdG9yTG9naWMSS
  C5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5Nb2RpZnlPcGVyYXRvckxvZ2ljUmVxdWVzdBpJL
  mVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLk1vZGlmeU9wZXJhdG9yTG9naWNSZXNwb25zZRKnA
  QoSTW9uaXRvcldvcmtlclN0YXRlEkcuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuTW9uaXRvc
  ldvcmtlclN0YXRlUmVxdWVzdBpILmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLk1vbml0b3JXb
  3JrZXJTdGF0ZVJlc3BvbnNlEqoBChNQYXVzZVNrZXdNaXRpZ2F0aW9uEkguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpd
  GVjdHVyZS53b3JrZXIuUGF1c2VTa2V3TWl0aWdhdGlvblJlcXVlc3QaSS5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0Z
  WN0dXJlLndvcmtlci5QYXVzZVNrZXdNaXRpZ2F0aW9uUmVzcG9uc2USvAEKGVF1ZXJ5QW5kUmVtb3ZlQnJlYWtwb2ludHMSTi5lZ
  HUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5RdWVyeUFuZFJlbW92ZUJyZWFrcG9pbnRzUmVxdWVzd
  BpPLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlF1ZXJ5QW5kUmVtb3ZlQnJlYWtwb2ludHNSZ
  XNwb25zZRKzAQoWUXVlcnlDdXJyZW50SW5wdXRUdXBsZRJLLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud
  29ya2VyLlF1ZXJ5Q3VycmVudElucHV0VHVwbGVSZXF1ZXN0GkwuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZ
  S53b3JrZXIuUXVlcnlDdXJyZW50SW5wdXRUdXBsZVJlc3BvbnNlEp4BCg9RdWVyeVN0YXRpc3RpY3MSRC5lZHUudWNpLmljcy5hb
  WJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5RdWVyeVN0YXRpc3RpY3NSZXF1ZXN0GkUuZWR1LnVjaS5pY3MuYW1iZXIuZ
  W5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUXVlcnlTdGF0aXN0aWNzUmVzcG9uc2USkgEKC1N0YXJ0V29ya2VyEkAuZWR1LnVja
  S5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuU3RhcnRXb3JrZXJSZXF1ZXN0GkEuZWR1LnVjaS5pY3MuYW1iZ
  XIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuU3RhcnRXb3JrZXJSZXNwb25zZRKSAQoLUGF1c2VXb3JrZXISQC5lZHUudWNpL
  mljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5QYXVzZVdvcmtlclJlcXVlc3QaQS5lZHUudWNpLmljcy5hbWJlc
  i5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5QYXVzZVdvcmtlclJlc3BvbnNlEpUBCgxSZXN1bWVXb3JrZXISQS5lZHUudWNpL
  mljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5SZXN1bWVXb3JrZXJSZXF1ZXN0GkIuZWR1LnVjaS5pY3MuYW1iZ
  XIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUmVzdW1lV29ya2VyUmVzcG9uc2USswEKFlNjaGVkdWxlclRpbWVTbG90RXZlb
  nQSSy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5TY2hlZHVsZXJUaW1lU2xvdEV2ZW50UmVxd
  WVzdBpMLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlNjaGVkdWxlclRpbWVTbG90RXZlbnRSZ
  XNwb25zZRKnAQoSU2VuZEltbXV0YWJsZVN0YXRlEkcuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZ
  XIuU2VuZEltbXV0YWJsZVN0YXRlUmVxdWVzdBpILmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyL
  lNlbmRJbW11dGFibGVTdGF0ZVJlc3BvbnNlEpsBCg5TaGFyZVBhcnRpdGlvbhJDLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hc
  mNoaXRlY3R1cmUud29ya2VyLlNoYXJlUGFydGl0aW9uUmVxdWVzdBpELmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY
  3R1cmUud29ya2VyLlNoYXJlUGFydGl0aW9uUmVzcG9uc2USbwoQU2h1dGRvd25EUFRocmVhZBJDLmVkdS51Y2kuaWNzLmFtYmVyL
  mVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLlNodXRkb3duRFBUaHJlYWRFdmVudBoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRKVA
  QoMT3Blbk9wZXJhdG9yEkEuZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuT3Blbk9wZXJhdG9yU
  mVxdWVzdBpCLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLk9wZW5PcGVyYXRvclJlc3BvbnNlE
  qcBChJVcGRhdGVJbnB1dExpbmtpbmcSRy5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5VcGRhd
  GVJbnB1dExpbmtpbmdSZXF1ZXN0GkguZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuVXBkYXRlS
  W5wdXRMaW5raW5nUmVzcG9uc2UShQEKGldvcmtlclByb3BhZ2F0ZUVwb2NoTWFya2VyEk8uZWR1LnVjaS5pY3MuYW1iZXIuZW5na
  W5lLmFyY2hpdGVjdHVyZS53b3JrZXIuV29ya2VyUHJvcGFnYXRlRXBvY2hNYXJrZXJSZXF1ZXN0GhYuZ29vZ2xlLnByb3RvYnVmL
  kVtcHR5Eo8BCgpSZXRyeVR1cGxlEj8uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b3JrZXIuUmV0cnlUd
  XBsZVJlcXVlc3QaQC5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5SZXRyeVR1cGxlUmVzcG9uc
  2USlQEKDERlYnVnQ29tbWFuZBJBLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkRlYnVnQ29tb
  WFuZFJlcXVlc3QaQi5lZHUudWNpLmljcy5hbWJlci5lbmdpbmUuYXJjaGl0ZWN0dXJlLndvcmtlci5EZWJ1Z0NvbW1hbmRSZXNwb
  25zZRK5AQoYRXZhbHVhdGVQeXRob25FeHByZXNzaW9uEk0uZWR1LnVjaS5pY3MuYW1iZXIuZW5naW5lLmFyY2hpdGVjdHVyZS53b
  3JrZXIuRXZhbHVhdGVQeXRob25FeHByZXNzaW9uUmVxdWVzdBpOLmVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1c
  mUud29ya2VyLkV2YWx1YXRlUHl0aG9uRXhwcmVzc2lvblJlc3BvbnNlErYBChdJbml0aWFsaXplT3BlcmF0b3JMb2dpYxJMLmVkd
  S51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkluaXRpYWxpemVPcGVyYXRvckxvZ2ljUmVxdWVzdBpNL
  mVkdS51Y2kuaWNzLmFtYmVyLmVuZ2luZS5hcmNoaXRlY3R1cmUud29ya2VyLkluaXRpYWxpemVPcGVyYXRvckxvZ2ljUmVzcG9uc
  2VCB+I/BEgAWABiBnByb3RvMw=="""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
      edu.uci.ics.amber.engine.architecture.sendsemantics.partitionings.PartitioningsProto.javaDescriptor,
      edu.uci.ics.amber.engine.common.virtualidentity.VirtualidentityProto.javaDescriptor,
      com.google.protobuf.timestamp.TimestampProto.javaDescriptor,
      com.google.protobuf.empty.EmptyProto.javaDescriptor,
      scalapb.options.ScalapbProto.javaDescriptor
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}