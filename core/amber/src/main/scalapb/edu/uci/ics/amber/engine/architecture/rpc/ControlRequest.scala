// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package edu.uci.ics.amber.engine.architecture.rpc

sealed trait ControlRequest extends scalapb.GeneratedSealedOneof {
  type MessageType = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage
  final def isEmpty = this.isInstanceOf[edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.Empty.type]
  final def isDefined = !isEmpty
  final def asMessage: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage = edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.ControlRequestTypeMapper.toBase(this)
  final def asNonEmpty: Option[edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty] = if (isEmpty) None else Some(this.asInstanceOf[edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty])
}

object ControlRequest {
  case object Empty extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequest
  
  sealed trait NonEmpty extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequest
  def defaultInstance: edu.uci.ics.amber.engine.architecture.rpc.ControlRequest = Empty
  
  implicit val ControlRequestTypeMapper: _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage, edu.uci.ics.amber.engine.architecture.rpc.ControlRequest] = new _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage, edu.uci.ics.amber.engine.architecture.rpc.ControlRequest] {
    override def toCustom(__base: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage): edu.uci.ics.amber.engine.architecture.rpc.ControlRequest = __base.sealedValue match {
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.DebugCommandRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ModifyLogicRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.RetryWorkflowRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PortCompletedRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.LinkWorkersRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddInputChannelRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddPartitioningRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AssignPortRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.FinalizeCheckpointRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.InitializeExecutorRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.UpdateExecutorRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EmptyRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PrepareCheckpointRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.QueryStatisticsRequest => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Ping => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pong => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Nested => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pass => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ErrorCommand => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Recursion => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Collect => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.GenerateNumber => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.MultiCall => __v.value
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Chain => __v.value
      case edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Empty => Empty
    }
    override def toBase(__custom: edu.uci.ics.amber.engine.architecture.rpc.ControlRequest): edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage(__custom match {
      case __v: edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.DebugCommandRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ModifyLogicRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.RetryWorkflowRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PortCompletedRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.LinkWorkersRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddInputChannelRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddPartitioningRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AssignPortRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.FinalizeCheckpointRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.InitializeExecutorRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.UpdateExecutorRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EmptyRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PrepareCheckpointRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.QueryStatisticsRequest(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.Ping => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Ping(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.Pong => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pong(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.Nested => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Nested(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.Pass => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pass(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ErrorCommand(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.Recursion => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Recursion(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.Collect => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Collect(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.GenerateNumber(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.MultiCall => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.MultiCall(__v)
      case __v: edu.uci.ics.amber.engine.architecture.rpc.Chain => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Chain(__v)
      case Empty => edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Empty
    })
  }
}
@SerialVersionUID(0L)
final case class ControlRequestMessage(
    sealedValue: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[ControlRequestMessage] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      if (sealedValue.propagateChannelMarkerRequest.isDefined) {
        val __value = sealedValue.propagateChannelMarkerRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.takeGlobalCheckpointRequest.isDefined) {
        val __value = sealedValue.takeGlobalCheckpointRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.debugCommandRequest.isDefined) {
        val __value = sealedValue.debugCommandRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.evaluatePythonExpressionRequest.isDefined) {
        val __value = sealedValue.evaluatePythonExpressionRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.modifyLogicRequest.isDefined) {
        val __value = sealedValue.modifyLogicRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.retryWorkflowRequest.isDefined) {
        val __value = sealedValue.retryWorkflowRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.consoleMessageTriggeredRequest.isDefined) {
        val __value = sealedValue.consoleMessageTriggeredRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.portCompletedRequest.isDefined) {
        val __value = sealedValue.portCompletedRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.workerStateUpdatedRequest.isDefined) {
        val __value = sealedValue.workerStateUpdatedRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.linkWorkersRequest.isDefined) {
        val __value = sealedValue.linkWorkersRequest.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.addInputChannelRequest.isDefined) {
        val __value = sealedValue.addInputChannelRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.addPartitioningRequest.isDefined) {
        val __value = sealedValue.addPartitioningRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.assignPortRequest.isDefined) {
        val __value = sealedValue.assignPortRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.finalizeCheckpointRequest.isDefined) {
        val __value = sealedValue.finalizeCheckpointRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.initializeExecutorRequest.isDefined) {
        val __value = sealedValue.initializeExecutorRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.updateExecutorRequest.isDefined) {
        val __value = sealedValue.updateExecutorRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.emptyRequest.isDefined) {
        val __value = sealedValue.emptyRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.prepareCheckpointRequest.isDefined) {
        val __value = sealedValue.prepareCheckpointRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.queryStatisticsRequest.isDefined) {
        val __value = sealedValue.queryStatisticsRequest.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.ping.isDefined) {
        val __value = sealedValue.ping.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.pong.isDefined) {
        val __value = sealedValue.pong.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.nested.isDefined) {
        val __value = sealedValue.nested.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.pass.isDefined) {
        val __value = sealedValue.pass.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.errorCommand.isDefined) {
        val __value = sealedValue.errorCommand.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.recursion.isDefined) {
        val __value = sealedValue.recursion.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.collect.isDefined) {
        val __value = sealedValue.collect.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.generateNumber.isDefined) {
        val __value = sealedValue.generateNumber.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.multiCall.isDefined) {
        val __value = sealedValue.multiCall.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      if (sealedValue.chain.isDefined) {
        val __value = sealedValue.chain.get
        __size += 2 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      sealedValue.propagateChannelMarkerRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.takeGlobalCheckpointRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.debugCommandRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.evaluatePythonExpressionRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.modifyLogicRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.retryWorkflowRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.consoleMessageTriggeredRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(8, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.portCompletedRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(9, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.workerStateUpdatedRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(10, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.linkWorkersRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(11, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.addInputChannelRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(50, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.addPartitioningRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(51, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.assignPortRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(52, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.finalizeCheckpointRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(53, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.initializeExecutorRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(54, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.updateExecutorRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(55, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.emptyRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(56, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.prepareCheckpointRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(57, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.queryStatisticsRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(58, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.ping.foreach { __v =>
        val __m = __v
        _output__.writeTag(100, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.pong.foreach { __v =>
        val __m = __v
        _output__.writeTag(101, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.nested.foreach { __v =>
        val __m = __v
        _output__.writeTag(102, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.pass.foreach { __v =>
        val __m = __v
        _output__.writeTag(103, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.errorCommand.foreach { __v =>
        val __m = __v
        _output__.writeTag(104, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.recursion.foreach { __v =>
        val __m = __v
        _output__.writeTag(105, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.collect.foreach { __v =>
        val __m = __v
        _output__.writeTag(106, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.generateNumber.foreach { __v =>
        val __m = __v
        _output__.writeTag(107, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.multiCall.foreach { __v =>
        val __m = __v
        _output__.writeTag(108, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      sealedValue.chain.foreach { __v =>
        val __m = __v
        _output__.writeTag(109, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def getPropagateChannelMarkerRequest: edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest = sealedValue.propagateChannelMarkerRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest.defaultInstance)
    def withPropagateChannelMarkerRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(__v))
    def getTakeGlobalCheckpointRequest: edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest = sealedValue.takeGlobalCheckpointRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest.defaultInstance)
    def withTakeGlobalCheckpointRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(__v))
    def getDebugCommandRequest: edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest = sealedValue.debugCommandRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest.defaultInstance)
    def withDebugCommandRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.DebugCommandRequest(__v))
    def getEvaluatePythonExpressionRequest: edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest = sealedValue.evaluatePythonExpressionRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest.defaultInstance)
    def withEvaluatePythonExpressionRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(__v))
    def getModifyLogicRequest: edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest = sealedValue.modifyLogicRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest.defaultInstance)
    def withModifyLogicRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ModifyLogicRequest(__v))
    def getRetryWorkflowRequest: edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest = sealedValue.retryWorkflowRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest.defaultInstance)
    def withRetryWorkflowRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.RetryWorkflowRequest(__v))
    def getConsoleMessageTriggeredRequest: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest = sealedValue.consoleMessageTriggeredRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest.defaultInstance)
    def withConsoleMessageTriggeredRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(__v))
    def getPortCompletedRequest: edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest = sealedValue.portCompletedRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest.defaultInstance)
    def withPortCompletedRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PortCompletedRequest(__v))
    def getWorkerStateUpdatedRequest: edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest = sealedValue.workerStateUpdatedRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest.defaultInstance)
    def withWorkerStateUpdatedRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(__v))
    def getLinkWorkersRequest: edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest = sealedValue.linkWorkersRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest.defaultInstance)
    def withLinkWorkersRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.LinkWorkersRequest(__v))
    def getAddInputChannelRequest: edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest = sealedValue.addInputChannelRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest.defaultInstance)
    def withAddInputChannelRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddInputChannelRequest(__v))
    def getAddPartitioningRequest: edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest = sealedValue.addPartitioningRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest.defaultInstance)
    def withAddPartitioningRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddPartitioningRequest(__v))
    def getAssignPortRequest: edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest = sealedValue.assignPortRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.defaultInstance)
    def withAssignPortRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AssignPortRequest(__v))
    def getFinalizeCheckpointRequest: edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest = sealedValue.finalizeCheckpointRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest.defaultInstance)
    def withFinalizeCheckpointRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.FinalizeCheckpointRequest(__v))
    def getInitializeExecutorRequest: edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest = sealedValue.initializeExecutorRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest.defaultInstance)
    def withInitializeExecutorRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.InitializeExecutorRequest(__v))
    def getUpdateExecutorRequest: edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest = sealedValue.updateExecutorRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest.defaultInstance)
    def withUpdateExecutorRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.UpdateExecutorRequest(__v))
    def getEmptyRequest: edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest = sealedValue.emptyRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest.defaultInstance)
    def withEmptyRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EmptyRequest(__v))
    def getPrepareCheckpointRequest: edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest = sealedValue.prepareCheckpointRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest.defaultInstance)
    def withPrepareCheckpointRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PrepareCheckpointRequest(__v))
    def getQueryStatisticsRequest: edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest = sealedValue.queryStatisticsRequest.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest.defaultInstance)
    def withQueryStatisticsRequest(__v: edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.QueryStatisticsRequest(__v))
    def getPing: edu.uci.ics.amber.engine.architecture.rpc.Ping = sealedValue.ping.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.Ping.defaultInstance)
    def withPing(__v: edu.uci.ics.amber.engine.architecture.rpc.Ping): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Ping(__v))
    def getPong: edu.uci.ics.amber.engine.architecture.rpc.Pong = sealedValue.pong.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.Pong.defaultInstance)
    def withPong(__v: edu.uci.ics.amber.engine.architecture.rpc.Pong): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pong(__v))
    def getNested: edu.uci.ics.amber.engine.architecture.rpc.Nested = sealedValue.nested.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.Nested.defaultInstance)
    def withNested(__v: edu.uci.ics.amber.engine.architecture.rpc.Nested): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Nested(__v))
    def getPass: edu.uci.ics.amber.engine.architecture.rpc.Pass = sealedValue.pass.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.Pass.defaultInstance)
    def withPass(__v: edu.uci.ics.amber.engine.architecture.rpc.Pass): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pass(__v))
    def getErrorCommand: edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand = sealedValue.errorCommand.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand.defaultInstance)
    def withErrorCommand(__v: edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ErrorCommand(__v))
    def getRecursion: edu.uci.ics.amber.engine.architecture.rpc.Recursion = sealedValue.recursion.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.Recursion.defaultInstance)
    def withRecursion(__v: edu.uci.ics.amber.engine.architecture.rpc.Recursion): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Recursion(__v))
    def getCollect: edu.uci.ics.amber.engine.architecture.rpc.Collect = sealedValue.collect.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.Collect.defaultInstance)
    def withCollect(__v: edu.uci.ics.amber.engine.architecture.rpc.Collect): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Collect(__v))
    def getGenerateNumber: edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber = sealedValue.generateNumber.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber.defaultInstance)
    def withGenerateNumber(__v: edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.GenerateNumber(__v))
    def getMultiCall: edu.uci.ics.amber.engine.architecture.rpc.MultiCall = sealedValue.multiCall.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.MultiCall.defaultInstance)
    def withMultiCall(__v: edu.uci.ics.amber.engine.architecture.rpc.MultiCall): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.MultiCall(__v))
    def getChain: edu.uci.ics.amber.engine.architecture.rpc.Chain = sealedValue.chain.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.Chain.defaultInstance)
    def withChain(__v: edu.uci.ics.amber.engine.architecture.rpc.Chain): ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Chain(__v))
    def clearSealedValue: ControlRequestMessage = copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Empty)
    def withSealedValue(__v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue): ControlRequestMessage = copy(sealedValue = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => sealedValue.propagateChannelMarkerRequest.orNull
        case 2 => sealedValue.takeGlobalCheckpointRequest.orNull
        case 3 => sealedValue.debugCommandRequest.orNull
        case 4 => sealedValue.evaluatePythonExpressionRequest.orNull
        case 5 => sealedValue.modifyLogicRequest.orNull
        case 6 => sealedValue.retryWorkflowRequest.orNull
        case 8 => sealedValue.consoleMessageTriggeredRequest.orNull
        case 9 => sealedValue.portCompletedRequest.orNull
        case 10 => sealedValue.workerStateUpdatedRequest.orNull
        case 11 => sealedValue.linkWorkersRequest.orNull
        case 50 => sealedValue.addInputChannelRequest.orNull
        case 51 => sealedValue.addPartitioningRequest.orNull
        case 52 => sealedValue.assignPortRequest.orNull
        case 53 => sealedValue.finalizeCheckpointRequest.orNull
        case 54 => sealedValue.initializeExecutorRequest.orNull
        case 55 => sealedValue.updateExecutorRequest.orNull
        case 56 => sealedValue.emptyRequest.orNull
        case 57 => sealedValue.prepareCheckpointRequest.orNull
        case 58 => sealedValue.queryStatisticsRequest.orNull
        case 100 => sealedValue.ping.orNull
        case 101 => sealedValue.pong.orNull
        case 102 => sealedValue.nested.orNull
        case 103 => sealedValue.pass.orNull
        case 104 => sealedValue.errorCommand.orNull
        case 105 => sealedValue.recursion.orNull
        case 106 => sealedValue.collect.orNull
        case 107 => sealedValue.generateNumber.orNull
        case 108 => sealedValue.multiCall.orNull
        case 109 => sealedValue.chain.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => sealedValue.propagateChannelMarkerRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => sealedValue.takeGlobalCheckpointRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => sealedValue.debugCommandRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => sealedValue.evaluatePythonExpressionRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 5 => sealedValue.modifyLogicRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 6 => sealedValue.retryWorkflowRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 8 => sealedValue.consoleMessageTriggeredRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 9 => sealedValue.portCompletedRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 10 => sealedValue.workerStateUpdatedRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 11 => sealedValue.linkWorkersRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 50 => sealedValue.addInputChannelRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 51 => sealedValue.addPartitioningRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 52 => sealedValue.assignPortRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 53 => sealedValue.finalizeCheckpointRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 54 => sealedValue.initializeExecutorRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 55 => sealedValue.updateExecutorRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 56 => sealedValue.emptyRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 57 => sealedValue.prepareCheckpointRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 58 => sealedValue.queryStatisticsRequest.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 100 => sealedValue.ping.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 101 => sealedValue.pong.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 102 => sealedValue.nested.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 103 => sealedValue.pass.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 104 => sealedValue.errorCommand.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 105 => sealedValue.recursion.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 106 => sealedValue.collect.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 107 => sealedValue.generateNumber.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 108 => sealedValue.multiCall.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 109 => sealedValue.chain.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.type = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage
    def toControlRequest: edu.uci.ics.amber.engine.architecture.rpc.ControlRequest = edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.ControlRequestTypeMapper.toCustom(this)
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ControlRequest])
}

object ControlRequestMessage extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage = {
    var __sealedValue: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Empty
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(__sealedValue.propagateChannelMarkerRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(__sealedValue.takeGlobalCheckpointRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.DebugCommandRequest(__sealedValue.debugCommandRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 34 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(__sealedValue.evaluatePythonExpressionRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 42 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ModifyLogicRequest(__sealedValue.modifyLogicRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 50 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.RetryWorkflowRequest(__sealedValue.retryWorkflowRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 66 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(__sealedValue.consoleMessageTriggeredRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 74 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PortCompletedRequest(__sealedValue.portCompletedRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 82 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(__sealedValue.workerStateUpdatedRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 90 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.LinkWorkersRequest(__sealedValue.linkWorkersRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 402 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddInputChannelRequest(__sealedValue.addInputChannelRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 410 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddPartitioningRequest(__sealedValue.addPartitioningRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 418 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AssignPortRequest(__sealedValue.assignPortRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 426 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.FinalizeCheckpointRequest(__sealedValue.finalizeCheckpointRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 434 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.InitializeExecutorRequest(__sealedValue.initializeExecutorRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 442 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.UpdateExecutorRequest(__sealedValue.updateExecutorRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 450 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EmptyRequest(__sealedValue.emptyRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 458 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PrepareCheckpointRequest(__sealedValue.prepareCheckpointRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 466 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.QueryStatisticsRequest(__sealedValue.queryStatisticsRequest.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 802 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Ping(__sealedValue.ping.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.Ping](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 810 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pong(__sealedValue.pong.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.Pong](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 818 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Nested(__sealedValue.nested.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.Nested](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 826 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pass(__sealedValue.pass.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.Pass](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 834 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ErrorCommand(__sealedValue.errorCommand.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 842 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Recursion(__sealedValue.recursion.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.Recursion](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 850 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Collect(__sealedValue.collect.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.Collect](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 858 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.GenerateNumber(__sealedValue.generateNumber.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 866 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.MultiCall(__sealedValue.multiCall.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.MultiCall](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 874 =>
          __sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Chain(__sealedValue.chain.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.Chain](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage(
        sealedValue = __sealedValue
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage(
        sealedValue = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(_))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.DebugCommandRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ModifyLogicRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.RetryWorkflowRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PortCompletedRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.LinkWorkersRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(50).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddInputChannelRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(51).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddPartitioningRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(52).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AssignPortRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(53).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.FinalizeCheckpointRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(54).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.InitializeExecutorRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(55).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.UpdateExecutorRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(56).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EmptyRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(57).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PrepareCheckpointRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(58).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.QueryStatisticsRequest(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(100).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Ping]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Ping(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(101).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Pong]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pong(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(102).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Nested]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Nested(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(103).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Pass]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pass(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(104).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ErrorCommand(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(105).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Recursion]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Recursion(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(106).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Collect]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Collect(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(107).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.GenerateNumber(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(108).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.MultiCall]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.MultiCall(_)))
            .orElse[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue](__fieldsMap.get(scalaDescriptor.findFieldByNumber(109).get).flatMap(_.as[_root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Chain]]).map(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Chain(_)))
            .getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(0)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(0)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest
      case 2 => __out = edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest
      case 3 => __out = edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest
      case 4 => __out = edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest
      case 5 => __out = edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest
      case 6 => __out = edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest
      case 8 => __out = edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest
      case 9 => __out = edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest
      case 10 => __out = edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest
      case 11 => __out = edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest
      case 50 => __out = edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest
      case 51 => __out = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest
      case 52 => __out = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest
      case 53 => __out = edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest
      case 54 => __out = edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest
      case 55 => __out = edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest
      case 56 => __out = edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest
      case 57 => __out = edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest
      case 58 => __out = edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest
      case 100 => __out = edu.uci.ics.amber.engine.architecture.rpc.Ping
      case 101 => __out = edu.uci.ics.amber.engine.architecture.rpc.Pong
      case 102 => __out = edu.uci.ics.amber.engine.architecture.rpc.Nested
      case 103 => __out = edu.uci.ics.amber.engine.architecture.rpc.Pass
      case 104 => __out = edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand
      case 105 => __out = edu.uci.ics.amber.engine.architecture.rpc.Recursion
      case 106 => __out = edu.uci.ics.amber.engine.architecture.rpc.Collect
      case 107 => __out = edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber
      case 108 => __out = edu.uci.ics.amber.engine.architecture.rpc.MultiCall
      case 109 => __out = edu.uci.ics.amber.engine.architecture.rpc.Chain
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage(
    sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Empty
  )
  sealed trait SealedValue extends _root_.scalapb.GeneratedOneof {
    def isEmpty: _root_.scala.Boolean = false
    def isDefined: _root_.scala.Boolean = true
    def isPropagateChannelMarkerRequest: _root_.scala.Boolean = false
    def isTakeGlobalCheckpointRequest: _root_.scala.Boolean = false
    def isDebugCommandRequest: _root_.scala.Boolean = false
    def isEvaluatePythonExpressionRequest: _root_.scala.Boolean = false
    def isModifyLogicRequest: _root_.scala.Boolean = false
    def isRetryWorkflowRequest: _root_.scala.Boolean = false
    def isConsoleMessageTriggeredRequest: _root_.scala.Boolean = false
    def isPortCompletedRequest: _root_.scala.Boolean = false
    def isWorkerStateUpdatedRequest: _root_.scala.Boolean = false
    def isLinkWorkersRequest: _root_.scala.Boolean = false
    def isAddInputChannelRequest: _root_.scala.Boolean = false
    def isAddPartitioningRequest: _root_.scala.Boolean = false
    def isAssignPortRequest: _root_.scala.Boolean = false
    def isFinalizeCheckpointRequest: _root_.scala.Boolean = false
    def isInitializeExecutorRequest: _root_.scala.Boolean = false
    def isUpdateExecutorRequest: _root_.scala.Boolean = false
    def isEmptyRequest: _root_.scala.Boolean = false
    def isPrepareCheckpointRequest: _root_.scala.Boolean = false
    def isQueryStatisticsRequest: _root_.scala.Boolean = false
    def isPing: _root_.scala.Boolean = false
    def isPong: _root_.scala.Boolean = false
    def isNested: _root_.scala.Boolean = false
    def isPass: _root_.scala.Boolean = false
    def isErrorCommand: _root_.scala.Boolean = false
    def isRecursion: _root_.scala.Boolean = false
    def isCollect: _root_.scala.Boolean = false
    def isGenerateNumber: _root_.scala.Boolean = false
    def isMultiCall: _root_.scala.Boolean = false
    def isChain: _root_.scala.Boolean = false
    def propagateChannelMarkerRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest] = _root_.scala.None
    def takeGlobalCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest] = _root_.scala.None
    def debugCommandRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest] = _root_.scala.None
    def evaluatePythonExpressionRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest] = _root_.scala.None
    def modifyLogicRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest] = _root_.scala.None
    def retryWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest] = _root_.scala.None
    def consoleMessageTriggeredRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest] = _root_.scala.None
    def portCompletedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest] = _root_.scala.None
    def workerStateUpdatedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest] = _root_.scala.None
    def linkWorkersRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest] = _root_.scala.None
    def addInputChannelRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest] = _root_.scala.None
    def addPartitioningRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest] = _root_.scala.None
    def assignPortRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest] = _root_.scala.None
    def finalizeCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest] = _root_.scala.None
    def initializeExecutorRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest] = _root_.scala.None
    def updateExecutorRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest] = _root_.scala.None
    def emptyRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest] = _root_.scala.None
    def prepareCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest] = _root_.scala.None
    def queryStatisticsRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest] = _root_.scala.None
    def ping: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Ping] = _root_.scala.None
    def pong: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Pong] = _root_.scala.None
    def nested: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Nested] = _root_.scala.None
    def pass: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Pass] = _root_.scala.None
    def errorCommand: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand] = _root_.scala.None
    def recursion: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Recursion] = _root_.scala.None
    def collect: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Collect] = _root_.scala.None
    def generateNumber: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber] = _root_.scala.None
    def multiCall: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.MultiCall] = _root_.scala.None
    def chain: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Chain] = _root_.scala.None
  }
  object SealedValue {
    @SerialVersionUID(0L)
    case object Empty extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = _root_.scala.Nothing
      override def isEmpty: _root_.scala.Boolean = true
      override def isDefined: _root_.scala.Boolean = false
      override def number: _root_.scala.Int = 0
      override def value: _root_.scala.Nothing = throw new java.util.NoSuchElementException("Empty.value")
    }
  
    @SerialVersionUID(0L)
    final case class PropagateChannelMarkerRequest(value: edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest
      override def isPropagateChannelMarkerRequest: _root_.scala.Boolean = true
      override def propagateChannelMarkerRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest] = Some(value)
      override def number: _root_.scala.Int = 1
    }
    @SerialVersionUID(0L)
    final case class TakeGlobalCheckpointRequest(value: edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest
      override def isTakeGlobalCheckpointRequest: _root_.scala.Boolean = true
      override def takeGlobalCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest] = Some(value)
      override def number: _root_.scala.Int = 2
    }
    @SerialVersionUID(0L)
    final case class DebugCommandRequest(value: edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest
      override def isDebugCommandRequest: _root_.scala.Boolean = true
      override def debugCommandRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest] = Some(value)
      override def number: _root_.scala.Int = 3
    }
    @SerialVersionUID(0L)
    final case class EvaluatePythonExpressionRequest(value: edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest
      override def isEvaluatePythonExpressionRequest: _root_.scala.Boolean = true
      override def evaluatePythonExpressionRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest] = Some(value)
      override def number: _root_.scala.Int = 4
    }
    @SerialVersionUID(0L)
    final case class ModifyLogicRequest(value: edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest
      override def isModifyLogicRequest: _root_.scala.Boolean = true
      override def modifyLogicRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest] = Some(value)
      override def number: _root_.scala.Int = 5
    }
    @SerialVersionUID(0L)
    final case class RetryWorkflowRequest(value: edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest
      override def isRetryWorkflowRequest: _root_.scala.Boolean = true
      override def retryWorkflowRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest] = Some(value)
      override def number: _root_.scala.Int = 6
    }
    @SerialVersionUID(0L)
    final case class ConsoleMessageTriggeredRequest(value: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest
      override def isConsoleMessageTriggeredRequest: _root_.scala.Boolean = true
      override def consoleMessageTriggeredRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest] = Some(value)
      override def number: _root_.scala.Int = 8
    }
    @SerialVersionUID(0L)
    final case class PortCompletedRequest(value: edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest
      override def isPortCompletedRequest: _root_.scala.Boolean = true
      override def portCompletedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest] = Some(value)
      override def number: _root_.scala.Int = 9
    }
    @SerialVersionUID(0L)
    final case class WorkerStateUpdatedRequest(value: edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest
      override def isWorkerStateUpdatedRequest: _root_.scala.Boolean = true
      override def workerStateUpdatedRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest] = Some(value)
      override def number: _root_.scala.Int = 10
    }
    @SerialVersionUID(0L)
    final case class LinkWorkersRequest(value: edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest
      override def isLinkWorkersRequest: _root_.scala.Boolean = true
      override def linkWorkersRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest] = Some(value)
      override def number: _root_.scala.Int = 11
    }
    @SerialVersionUID(0L)
    final case class AddInputChannelRequest(value: edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest
      override def isAddInputChannelRequest: _root_.scala.Boolean = true
      override def addInputChannelRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest] = Some(value)
      override def number: _root_.scala.Int = 50
    }
    @SerialVersionUID(0L)
    final case class AddPartitioningRequest(value: edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest
      override def isAddPartitioningRequest: _root_.scala.Boolean = true
      override def addPartitioningRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest] = Some(value)
      override def number: _root_.scala.Int = 51
    }
    @SerialVersionUID(0L)
    final case class AssignPortRequest(value: edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest
      override def isAssignPortRequest: _root_.scala.Boolean = true
      override def assignPortRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest] = Some(value)
      override def number: _root_.scala.Int = 52
    }
    @SerialVersionUID(0L)
    final case class FinalizeCheckpointRequest(value: edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest
      override def isFinalizeCheckpointRequest: _root_.scala.Boolean = true
      override def finalizeCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest] = Some(value)
      override def number: _root_.scala.Int = 53
    }
    @SerialVersionUID(0L)
    final case class InitializeExecutorRequest(value: edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest
      override def isInitializeExecutorRequest: _root_.scala.Boolean = true
      override def initializeExecutorRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest] = Some(value)
      override def number: _root_.scala.Int = 54
    }
    @SerialVersionUID(0L)
    final case class UpdateExecutorRequest(value: edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest
      override def isUpdateExecutorRequest: _root_.scala.Boolean = true
      override def updateExecutorRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest] = Some(value)
      override def number: _root_.scala.Int = 55
    }
    @SerialVersionUID(0L)
    final case class EmptyRequest(value: edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest
      override def isEmptyRequest: _root_.scala.Boolean = true
      override def emptyRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest] = Some(value)
      override def number: _root_.scala.Int = 56
    }
    @SerialVersionUID(0L)
    final case class PrepareCheckpointRequest(value: edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest
      override def isPrepareCheckpointRequest: _root_.scala.Boolean = true
      override def prepareCheckpointRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest] = Some(value)
      override def number: _root_.scala.Int = 57
    }
    @SerialVersionUID(0L)
    final case class QueryStatisticsRequest(value: edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest
      override def isQueryStatisticsRequest: _root_.scala.Boolean = true
      override def queryStatisticsRequest: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest] = Some(value)
      override def number: _root_.scala.Int = 58
    }
    @SerialVersionUID(0L)
    final case class Ping(value: edu.uci.ics.amber.engine.architecture.rpc.Ping) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.Ping
      override def isPing: _root_.scala.Boolean = true
      override def ping: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Ping] = Some(value)
      override def number: _root_.scala.Int = 100
    }
    @SerialVersionUID(0L)
    final case class Pong(value: edu.uci.ics.amber.engine.architecture.rpc.Pong) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.Pong
      override def isPong: _root_.scala.Boolean = true
      override def pong: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Pong] = Some(value)
      override def number: _root_.scala.Int = 101
    }
    @SerialVersionUID(0L)
    final case class Nested(value: edu.uci.ics.amber.engine.architecture.rpc.Nested) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.Nested
      override def isNested: _root_.scala.Boolean = true
      override def nested: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Nested] = Some(value)
      override def number: _root_.scala.Int = 102
    }
    @SerialVersionUID(0L)
    final case class Pass(value: edu.uci.ics.amber.engine.architecture.rpc.Pass) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.Pass
      override def isPass: _root_.scala.Boolean = true
      override def pass: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Pass] = Some(value)
      override def number: _root_.scala.Int = 103
    }
    @SerialVersionUID(0L)
    final case class ErrorCommand(value: edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand
      override def isErrorCommand: _root_.scala.Boolean = true
      override def errorCommand: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand] = Some(value)
      override def number: _root_.scala.Int = 104
    }
    @SerialVersionUID(0L)
    final case class Recursion(value: edu.uci.ics.amber.engine.architecture.rpc.Recursion) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.Recursion
      override def isRecursion: _root_.scala.Boolean = true
      override def recursion: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Recursion] = Some(value)
      override def number: _root_.scala.Int = 105
    }
    @SerialVersionUID(0L)
    final case class Collect(value: edu.uci.ics.amber.engine.architecture.rpc.Collect) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.Collect
      override def isCollect: _root_.scala.Boolean = true
      override def collect: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Collect] = Some(value)
      override def number: _root_.scala.Int = 106
    }
    @SerialVersionUID(0L)
    final case class GenerateNumber(value: edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber
      override def isGenerateNumber: _root_.scala.Boolean = true
      override def generateNumber: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber] = Some(value)
      override def number: _root_.scala.Int = 107
    }
    @SerialVersionUID(0L)
    final case class MultiCall(value: edu.uci.ics.amber.engine.architecture.rpc.MultiCall) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.MultiCall
      override def isMultiCall: _root_.scala.Boolean = true
      override def multiCall: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.MultiCall] = Some(value)
      override def number: _root_.scala.Int = 108
    }
    @SerialVersionUID(0L)
    final case class Chain(value: edu.uci.ics.amber.engine.architecture.rpc.Chain) extends edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue {
      type ValueType = edu.uci.ics.amber.engine.architecture.rpc.Chain
      override def isChain: _root_.scala.Boolean = true
      override def chain: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.Chain] = Some(value)
      override def number: _root_.scala.Int = 109
    }
  }
  implicit class ControlRequestMessageLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage](_l) {
    def propagateChannelMarkerRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest] = field(_.getPropagateChannelMarkerRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PropagateChannelMarkerRequest(f_)))
    def takeGlobalCheckpointRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest] = field(_.getTakeGlobalCheckpointRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.TakeGlobalCheckpointRequest(f_)))
    def debugCommandRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest] = field(_.getDebugCommandRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.DebugCommandRequest(f_)))
    def evaluatePythonExpressionRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest] = field(_.getEvaluatePythonExpressionRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EvaluatePythonExpressionRequest(f_)))
    def modifyLogicRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest] = field(_.getModifyLogicRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ModifyLogicRequest(f_)))
    def retryWorkflowRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest] = field(_.getRetryWorkflowRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.RetryWorkflowRequest(f_)))
    def consoleMessageTriggeredRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest] = field(_.getConsoleMessageTriggeredRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ConsoleMessageTriggeredRequest(f_)))
    def portCompletedRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest] = field(_.getPortCompletedRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PortCompletedRequest(f_)))
    def workerStateUpdatedRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest] = field(_.getWorkerStateUpdatedRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.WorkerStateUpdatedRequest(f_)))
    def linkWorkersRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest] = field(_.getLinkWorkersRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.LinkWorkersRequest(f_)))
    def addInputChannelRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest] = field(_.getAddInputChannelRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddInputChannelRequest(f_)))
    def addPartitioningRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest] = field(_.getAddPartitioningRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AddPartitioningRequest(f_)))
    def assignPortRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest] = field(_.getAssignPortRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.AssignPortRequest(f_)))
    def finalizeCheckpointRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest] = field(_.getFinalizeCheckpointRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.FinalizeCheckpointRequest(f_)))
    def initializeExecutorRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest] = field(_.getInitializeExecutorRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.InitializeExecutorRequest(f_)))
    def updateExecutorRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest] = field(_.getUpdateExecutorRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.UpdateExecutorRequest(f_)))
    def emptyRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest] = field(_.getEmptyRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.EmptyRequest(f_)))
    def prepareCheckpointRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest] = field(_.getPrepareCheckpointRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.PrepareCheckpointRequest(f_)))
    def queryStatisticsRequest: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest] = field(_.getQueryStatisticsRequest)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.QueryStatisticsRequest(f_)))
    def ping: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Ping] = field(_.getPing)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Ping(f_)))
    def pong: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Pong] = field(_.getPong)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pong(f_)))
    def nested: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Nested] = field(_.getNested)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Nested(f_)))
    def pass: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Pass] = field(_.getPass)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Pass(f_)))
    def errorCommand: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand] = field(_.getErrorCommand)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.ErrorCommand(f_)))
    def recursion: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Recursion] = field(_.getRecursion)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Recursion(f_)))
    def collect: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Collect] = field(_.getCollect)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Collect(f_)))
    def generateNumber: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber] = field(_.getGenerateNumber)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.GenerateNumber(f_)))
    def multiCall: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.MultiCall] = field(_.getMultiCall)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.MultiCall(f_)))
    def chain: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Chain] = field(_.getChain)((c_, f_) => c_.copy(sealedValue = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue.Chain(f_)))
    def sealedValue: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue] = field(_.sealedValue)((c_, f_) => c_.copy(sealedValue = f_))
  }
  final val PROPAGATE_CHANNEL_MARKER_REQUEST_FIELD_NUMBER = 1
  final val TAKE_GLOBAL_CHECKPOINT_REQUEST_FIELD_NUMBER = 2
  final val DEBUG_COMMAND_REQUEST_FIELD_NUMBER = 3
  final val EVALUATE_PYTHON_EXPRESSION_REQUEST_FIELD_NUMBER = 4
  final val MODIFY_LOGIC_REQUEST_FIELD_NUMBER = 5
  final val RETRY_WORKFLOW_REQUEST_FIELD_NUMBER = 6
  final val CONSOLE_MESSAGE_TRIGGERED_REQUEST_FIELD_NUMBER = 8
  final val PORT_COMPLETED_REQUEST_FIELD_NUMBER = 9
  final val WORKER_STATE_UPDATED_REQUEST_FIELD_NUMBER = 10
  final val LINK_WORKERS_REQUEST_FIELD_NUMBER = 11
  final val ADD_INPUT_CHANNEL_REQUEST_FIELD_NUMBER = 50
  final val ADD_PARTITIONING_REQUEST_FIELD_NUMBER = 51
  final val ASSIGN_PORT_REQUEST_FIELD_NUMBER = 52
  final val FINALIZE_CHECKPOINT_REQUEST_FIELD_NUMBER = 53
  final val INITIALIZE_EXECUTOR_REQUEST_FIELD_NUMBER = 54
  final val UPDATE_EXECUTOR_REQUEST_FIELD_NUMBER = 55
  final val EMPTY_REQUEST_FIELD_NUMBER = 56
  final val PREPARE_CHECKPOINT_REQUEST_FIELD_NUMBER = 57
  final val QUERY_STATISTICS_REQUEST_FIELD_NUMBER = 58
  final val PING_FIELD_NUMBER = 100
  final val PONG_FIELD_NUMBER = 101
  final val NESTED_FIELD_NUMBER = 102
  final val PASS_FIELD_NUMBER = 103
  final val ERROR_COMMAND_FIELD_NUMBER = 104
  final val RECURSION_FIELD_NUMBER = 105
  final val COLLECT_FIELD_NUMBER = 106
  final val GENERATE_NUMBER_FIELD_NUMBER = 107
  final val MULTI_CALL_FIELD_NUMBER = 108
  final val CHAIN_FIELD_NUMBER = 109
  def of(
    sealedValue: edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.SealedValue
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage = _root_.edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage(
    sealedValue
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ControlRequest])
}

@SerialVersionUID(0L)
final case class PropagateChannelMarkerRequest(
    sourceOpToStartProp: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity],
    id: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    markerType: edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType,
    scope: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity],
    targetOps: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity],
    markerCommand: edu.uci.ics.amber.engine.architecture.rpc.ControlRequest,
    markerMethodName: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[PropagateChannelMarkerRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      sourceOpToStartProp.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = id
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = markerType.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(3, __value)
        }
      };
      scope.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      targetOps.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      
      {
        val __value = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest._typemapper_markerCommand.toBase(markerCommand)
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = markerMethodName
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(7, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      sourceOpToStartProp.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = id
        if (__v.serializedSize != 0) {
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = markerType.value
        if (__v != 0) {
          _output__.writeEnum(3, __v)
        }
      };
      scope.foreach { __v =>
        val __m = __v
        _output__.writeTag(4, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      targetOps.foreach { __v =>
        val __m = __v
        _output__.writeTag(5, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      {
        val __v = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest._typemapper_markerCommand.toBase(markerCommand)
        if (__v.serializedSize != 0) {
          _output__.writeTag(6, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = markerMethodName
        if (!__v.isEmpty) {
          _output__.writeString(7, __v)
        }
      };
    }
    def clearSourceOpToStartProp = copy(sourceOpToStartProp = _root_.scala.Seq.empty)
    def addSourceOpToStartProp(__vs: edu.uci.ics.amber.engine.common.PhysicalOpIdentity *): PropagateChannelMarkerRequest = addAllSourceOpToStartProp(__vs)
    def addAllSourceOpToStartProp(__vs: Iterable[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(sourceOpToStartProp = sourceOpToStartProp ++ __vs)
    def withSourceOpToStartProp(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(sourceOpToStartProp = __v)
    def withId(__v: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity): PropagateChannelMarkerRequest = copy(id = __v)
    def withMarkerType(__v: edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType): PropagateChannelMarkerRequest = copy(markerType = __v)
    def clearScope = copy(scope = _root_.scala.Seq.empty)
    def addScope(__vs: edu.uci.ics.amber.engine.common.PhysicalOpIdentity *): PropagateChannelMarkerRequest = addAllScope(__vs)
    def addAllScope(__vs: Iterable[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(scope = scope ++ __vs)
    def withScope(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(scope = __v)
    def clearTargetOps = copy(targetOps = _root_.scala.Seq.empty)
    def addTargetOps(__vs: edu.uci.ics.amber.engine.common.PhysicalOpIdentity *): PropagateChannelMarkerRequest = addAllTargetOps(__vs)
    def addAllTargetOps(__vs: Iterable[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(targetOps = targetOps ++ __vs)
    def withTargetOps(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]): PropagateChannelMarkerRequest = copy(targetOps = __v)
    def withMarkerCommand(__v: edu.uci.ics.amber.engine.architecture.rpc.ControlRequest): PropagateChannelMarkerRequest = copy(markerCommand = __v)
    def withMarkerMethodName(__v: _root_.scala.Predef.String): PropagateChannelMarkerRequest = copy(markerMethodName = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => sourceOpToStartProp
        case 2 => {
          val __t = id
          if (__t != edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance) __t else null
        }
        case 3 => {
          val __t = markerType.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 4 => scope
        case 5 => targetOps
        case 6 => {
          val __t = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest._typemapper_markerCommand.toBase(markerCommand)
          if (__t != edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.defaultInstance) __t else null
        }
        case 7 => {
          val __t = markerMethodName
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(sourceOpToStartProp.iterator.map(_.toPMessage).toVector)
        case 2 => id.toPMessage
        case 3 => _root_.scalapb.descriptors.PEnum(markerType.scalaValueDescriptor)
        case 4 => _root_.scalapb.descriptors.PRepeated(scope.iterator.map(_.toPMessage).toVector)
        case 5 => _root_.scalapb.descriptors.PRepeated(targetOps.iterator.map(_.toPMessage).toVector)
        case 6 => edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest._typemapper_markerCommand.toBase(markerCommand).toPMessage
        case 7 => _root_.scalapb.descriptors.PString(markerMethodName)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest.type = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest])
}

object PropagateChannelMarkerRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest = {
    val __sourceOpToStartProp: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.PhysicalOpIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]
    var __id: _root_.scala.Option[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = _root_.scala.None
    var __markerType: edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType = edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType.REQUIRE_ALIGNMENT
    val __scope: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.PhysicalOpIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]
    val __targetOps: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.PhysicalOpIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]
    var __markerCommand: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage] = _root_.scala.None
    var __markerMethodName: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __sourceOpToStartProp += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PhysicalOpIdentity](_input__)
        case 18 =>
          __id = _root_.scala.Some(__id.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __markerType = edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType.fromValue(_input__.readEnum())
        case 34 =>
          __scope += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PhysicalOpIdentity](_input__)
        case 42 =>
          __targetOps += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PhysicalOpIdentity](_input__)
        case 50 =>
          __markerCommand = _root_.scala.Some(__markerCommand.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 58 =>
          __markerMethodName = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest(
        sourceOpToStartProp = __sourceOpToStartProp.result(),
        id = __id.getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        markerType = __markerType,
        scope = __scope.result(),
        targetOps = __targetOps.result(),
        markerCommand = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest._typemapper_markerCommand.toCustom(__markerCommand.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.defaultInstance)),
        markerMethodName = __markerMethodName
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest(
        sourceOpToStartProp = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]]).getOrElse(_root_.scala.Seq.empty),
        id = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity]).getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        markerType = edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType.REQUIRE_ALIGNMENT.scalaValueDescriptor).number),
        scope = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]]).getOrElse(_root_.scala.Seq.empty),
        targetOps = __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]]).getOrElse(_root_.scala.Seq.empty),
        markerCommand = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest._typemapper_markerCommand.toCustom(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage]).getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.defaultInstance)),
        markerMethodName = __fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.PhysicalOpIdentity
      case 2 => __out = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity
      case 4 => __out = edu.uci.ics.amber.engine.common.PhysicalOpIdentity
      case 5 => __out = edu.uci.ics.amber.engine.common.PhysicalOpIdentity
      case 6 => __out = edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType
    }
  }
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest(
    sourceOpToStartProp = _root_.scala.Seq.empty,
    id = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance,
    markerType = edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType.REQUIRE_ALIGNMENT,
    scope = _root_.scala.Seq.empty,
    targetOps = _root_.scala.Seq.empty,
    markerCommand = edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest._typemapper_markerCommand.toCustom(edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage.defaultInstance),
    markerMethodName = ""
  )
  implicit class PropagateChannelMarkerRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest](_l) {
    def sourceOpToStartProp: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]] = field(_.sourceOpToStartProp)((c_, f_) => c_.copy(sourceOpToStartProp = f_))
    def id: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def markerType: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType] = field(_.markerType)((c_, f_) => c_.copy(markerType = f_))
    def scope: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]] = field(_.scope)((c_, f_) => c_.copy(scope = f_))
    def targetOps: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]] = field(_.targetOps)((c_, f_) => c_.copy(targetOps = f_))
    def markerCommand: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ControlRequest] = field(_.markerCommand)((c_, f_) => c_.copy(markerCommand = f_))
    def markerMethodName: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.markerMethodName)((c_, f_) => c_.copy(markerMethodName = f_))
  }
  final val SOURCE_OP_TO_START_PROP_FIELD_NUMBER = 1
  final val ID_FIELD_NUMBER = 2
  final val MARKER_TYPE_FIELD_NUMBER = 3
  final val SCOPE_FIELD_NUMBER = 4
  final val TARGET_OPS_FIELD_NUMBER = 5
  final val MARKER_COMMAND_FIELD_NUMBER = 6
  final val MARKER_METHOD_NAME_FIELD_NUMBER = 7
  @transient
  private[rpc] val _typemapper_markerCommand: _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage, edu.uci.ics.amber.engine.architecture.rpc.ControlRequest] = implicitly[_root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.ControlRequestMessage, edu.uci.ics.amber.engine.architecture.rpc.ControlRequest]]
  def of(
    sourceOpToStartProp: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity],
    id: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    markerType: edu.uci.ics.amber.engine.architecture.rpc.ChannelMarkerType,
    scope: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity],
    targetOps: _root_.scala.Seq[edu.uci.ics.amber.engine.common.PhysicalOpIdentity],
    markerCommand: edu.uci.ics.amber.engine.architecture.rpc.ControlRequest,
    markerMethodName: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest(
    sourceOpToStartProp,
    id,
    markerType,
    scope,
    targetOps,
    markerCommand,
    markerMethodName
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PropagateChannelMarkerRequest])
}

@SerialVersionUID(0L)
final case class TakeGlobalCheckpointRequest(
    estimationOnly: _root_.scala.Boolean,
    checkpointId: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    destination: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[TakeGlobalCheckpointRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = estimationOnly
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
        }
      };
      
      {
        val __value = checkpointId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = destination
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(3, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = estimationOnly
        if (__v != false) {
          _output__.writeBool(1, __v)
        }
      };
      {
        val __v = checkpointId
        if (__v.serializedSize != 0) {
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = destination
        if (!__v.isEmpty) {
          _output__.writeString(3, __v)
        }
      };
    }
    def withEstimationOnly(__v: _root_.scala.Boolean): TakeGlobalCheckpointRequest = copy(estimationOnly = __v)
    def withCheckpointId(__v: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity): TakeGlobalCheckpointRequest = copy(checkpointId = __v)
    def withDestination(__v: _root_.scala.Predef.String): TakeGlobalCheckpointRequest = copy(destination = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = estimationOnly
          if (__t != false) __t else null
        }
        case 2 => {
          val __t = checkpointId
          if (__t != edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance) __t else null
        }
        case 3 => {
          val __t = destination
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PBoolean(estimationOnly)
        case 2 => checkpointId.toPMessage
        case 3 => _root_.scalapb.descriptors.PString(destination)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest.type = edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest])
}

object TakeGlobalCheckpointRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest = {
    var __estimationOnly: _root_.scala.Boolean = false
    var __checkpointId: _root_.scala.Option[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = _root_.scala.None
    var __destination: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __estimationOnly = _input__.readBool()
        case 18 =>
          __checkpointId = _root_.scala.Some(__checkpointId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __destination = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest(
        estimationOnly = __estimationOnly,
        checkpointId = __checkpointId.getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        destination = __destination
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest(
        estimationOnly = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        checkpointId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity]).getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        destination = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest(
    estimationOnly = false,
    checkpointId = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance,
    destination = ""
  )
  implicit class TakeGlobalCheckpointRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest](_l) {
    def estimationOnly: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.estimationOnly)((c_, f_) => c_.copy(estimationOnly = f_))
    def checkpointId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = field(_.checkpointId)((c_, f_) => c_.copy(checkpointId = f_))
    def destination: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.destination)((c_, f_) => c_.copy(destination = f_))
  }
  final val ESTIMATION_ONLY_FIELD_NUMBER = 1
  final val CHECKPOINT_ID_FIELD_NUMBER = 2
  final val DESTINATION_FIELD_NUMBER = 3
  def of(
    estimationOnly: _root_.scala.Boolean,
    checkpointId: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    destination: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest(
    estimationOnly,
    checkpointId,
    destination
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.TakeGlobalCheckpointRequest])
}

@SerialVersionUID(0L)
final case class DebugCommandRequest(
    workerId: _root_.scala.Predef.String,
    cmd: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[DebugCommandRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = workerId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = cmd
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = workerId
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = cmd
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
    }
    def withWorkerId(__v: _root_.scala.Predef.String): DebugCommandRequest = copy(workerId = __v)
    def withCmd(__v: _root_.scala.Predef.String): DebugCommandRequest = copy(cmd = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = workerId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = cmd
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(workerId)
        case 2 => _root_.scalapb.descriptors.PString(cmd)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest.type = edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest])
}

object DebugCommandRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest = {
    var __workerId: _root_.scala.Predef.String = ""
    var __cmd: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __workerId = _input__.readStringRequireUtf8()
        case 18 =>
          __cmd = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest(
        workerId = __workerId,
        cmd = __cmd
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest(
        workerId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        cmd = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(8)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(8)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest(
    workerId = "",
    cmd = ""
  )
  implicit class DebugCommandRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest](_l) {
    def workerId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.workerId)((c_, f_) => c_.copy(workerId = f_))
    def cmd: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.cmd)((c_, f_) => c_.copy(cmd = f_))
  }
  final val WORKER_ID_FIELD_NUMBER = 1
  final val CMD_FIELD_NUMBER = 2
  def of(
    workerId: _root_.scala.Predef.String,
    cmd: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest(
    workerId,
    cmd
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.DebugCommandRequest])
}

@SerialVersionUID(0L)
final case class EvaluatePythonExpressionRequest(
    expression: _root_.scala.Predef.String,
    operatorId: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[EvaluatePythonExpressionRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = expression
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      
      {
        val __value = operatorId
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = expression
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = operatorId
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
    }
    def withExpression(__v: _root_.scala.Predef.String): EvaluatePythonExpressionRequest = copy(expression = __v)
    def withOperatorId(__v: _root_.scala.Predef.String): EvaluatePythonExpressionRequest = copy(operatorId = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = expression
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = operatorId
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(expression)
        case 2 => _root_.scalapb.descriptors.PString(operatorId)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest.type = edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest])
}

object EvaluatePythonExpressionRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest = {
    var __expression: _root_.scala.Predef.String = ""
    var __operatorId: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __expression = _input__.readStringRequireUtf8()
        case 18 =>
          __operatorId = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest(
        expression = __expression,
        operatorId = __operatorId
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest(
        expression = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
        operatorId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(9)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(9)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest(
    expression = "",
    operatorId = ""
  )
  implicit class EvaluatePythonExpressionRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest](_l) {
    def expression: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.expression)((c_, f_) => c_.copy(expression = f_))
    def operatorId: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.operatorId)((c_, f_) => c_.copy(operatorId = f_))
  }
  final val EXPRESSION_FIELD_NUMBER = 1
  final val OPERATOR_ID_FIELD_NUMBER = 2
  def of(
    expression: _root_.scala.Predef.String,
    operatorId: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest(
    expression,
    operatorId
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.EvaluatePythonExpressionRequest])
}

@SerialVersionUID(0L)
final case class ModifyLogicRequest(
    updateRequest: _root_.scala.Seq[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[ModifyLogicRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      updateRequest.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      updateRequest.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearUpdateRequest = copy(updateRequest = _root_.scala.Seq.empty)
    def addUpdateRequest(__vs: edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest *): ModifyLogicRequest = addAllUpdateRequest(__vs)
    def addAllUpdateRequest(__vs: Iterable[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]): ModifyLogicRequest = copy(updateRequest = updateRequest ++ __vs)
    def withUpdateRequest(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]): ModifyLogicRequest = copy(updateRequest = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => updateRequest
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(updateRequest.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest.type = edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest])
}

object ModifyLogicRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest = {
    val __updateRequest: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __updateRequest += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest(
        updateRequest = __updateRequest.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest(
        updateRequest = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(10)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(10)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest(
    updateRequest = _root_.scala.Seq.empty
  )
  implicit class ModifyLogicRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest](_l) {
    def updateRequest: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]] = field(_.updateRequest)((c_, f_) => c_.copy(updateRequest = f_))
  }
  final val UPDATE_REQUEST_FIELD_NUMBER = 1
  def of(
    updateRequest: _root_.scala.Seq[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest(
    updateRequest
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ModifyLogicRequest])
}

@SerialVersionUID(0L)
final case class RetryWorkflowRequest(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[RetryWorkflowRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      workers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      workers.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearWorkers = copy(workers = _root_.scala.Seq.empty)
    def addWorkers(__vs: edu.uci.ics.amber.engine.common.ActorVirtualIdentity *): RetryWorkflowRequest = addAllWorkers(__vs)
    def addAllWorkers(__vs: Iterable[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): RetryWorkflowRequest = copy(workers = workers ++ __vs)
    def withWorkers(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): RetryWorkflowRequest = copy(workers = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => workers
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(workers.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest.type = edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest])
}

object RetryWorkflowRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest = {
    val __workers: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __workers += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest(
        workers = __workers.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest(
        workers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(11)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(11)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest(
    workers = _root_.scala.Seq.empty
  )
  implicit class RetryWorkflowRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest](_l) {
    def workers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]] = field(_.workers)((c_, f_) => c_.copy(workers = f_))
  }
  final val WORKERS_FIELD_NUMBER = 1
  def of(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest(
    workers
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.RetryWorkflowRequest])
}

@SerialVersionUID(0L)
final case class ConsoleMessageTriggeredRequest(
    consoleMessage: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[ConsoleMessageTriggeredRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = consoleMessage
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = consoleMessage
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withConsoleMessage(__v: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage): ConsoleMessageTriggeredRequest = copy(consoleMessage = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = consoleMessage
          if (__t != edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => consoleMessage.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest.type = edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest])
}

object ConsoleMessageTriggeredRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest = {
    var __consoleMessage: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __consoleMessage = _root_.scala.Some(__consoleMessage.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest(
        consoleMessage = __consoleMessage.getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest(
        consoleMessage = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage]).getOrElse(edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(13)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(13)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest(
    consoleMessage = edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage.defaultInstance
  )
  implicit class ConsoleMessageTriggeredRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest](_l) {
    def consoleMessage: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage] = field(_.consoleMessage)((c_, f_) => c_.copy(consoleMessage = f_))
  }
  final val CONSOLE_MESSAGE_FIELD_NUMBER = 1
  def of(
    consoleMessage: edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessage
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest(
    consoleMessage
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ConsoleMessageTriggeredRequest])
}

@SerialVersionUID(0L)
final case class PortCompletedRequest(
    portId: edu.uci.ics.amber.engine.common.PortIdentity,
    input: _root_.scala.Boolean
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[PortCompletedRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = portId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = input
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = portId
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = input
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
    }
    def withPortId(__v: edu.uci.ics.amber.engine.common.PortIdentity): PortCompletedRequest = copy(portId = __v)
    def withInput(__v: _root_.scala.Boolean): PortCompletedRequest = copy(input = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = portId
          if (__t != edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance) __t else null
        }
        case 2 => {
          val __t = input
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => portId.toPMessage
        case 2 => _root_.scalapb.descriptors.PBoolean(input)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest.type = edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest])
}

object PortCompletedRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest = {
    var __portId: _root_.scala.Option[edu.uci.ics.amber.engine.common.PortIdentity] = _root_.scala.None
    var __input: _root_.scala.Boolean = false
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __portId = _root_.scala.Some(__portId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PortIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 16 =>
          __input = _input__.readBool()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest(
        portId = __portId.getOrElse(edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance),
        input = __input
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest(
        portId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.PortIdentity]).getOrElse(edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance),
        input = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(14)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(14)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.PortIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest(
    portId = edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance,
    input = false
  )
  implicit class PortCompletedRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest](_l) {
    def portId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.PortIdentity] = field(_.portId)((c_, f_) => c_.copy(portId = f_))
    def input: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.input)((c_, f_) => c_.copy(input = f_))
  }
  final val PORT_ID_FIELD_NUMBER = 1
  final val INPUT_FIELD_NUMBER = 2
  def of(
    portId: edu.uci.ics.amber.engine.common.PortIdentity,
    input: _root_.scala.Boolean
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest(
    portId,
    input
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PortCompletedRequest])
}

@SerialVersionUID(0L)
final case class WorkerStateUpdatedRequest(
    state: edu.uci.ics.amber.engine.architecture.worker.WorkerState
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[WorkerStateUpdatedRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = state.value
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = state.value
        if (__v != 0) {
          _output__.writeEnum(1, __v)
        }
      };
    }
    def withState(__v: edu.uci.ics.amber.engine.architecture.worker.WorkerState): WorkerStateUpdatedRequest = copy(state = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = state.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(state.scalaValueDescriptor)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest.type = edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest])
}

object WorkerStateUpdatedRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest = {
    var __state: edu.uci.ics.amber.engine.architecture.worker.WorkerState = edu.uci.ics.amber.engine.architecture.worker.WorkerState.UNINITIALIZED
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __state = edu.uci.ics.amber.engine.architecture.worker.WorkerState.fromValue(_input__.readEnum())
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest(
        state = __state
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest(
        state = edu.uci.ics.amber.engine.architecture.worker.WorkerState.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(edu.uci.ics.amber.engine.architecture.worker.WorkerState.UNINITIALIZED.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(15)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(15)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => edu.uci.ics.amber.engine.architecture.worker.WorkerState
    }
  }
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest(
    state = edu.uci.ics.amber.engine.architecture.worker.WorkerState.UNINITIALIZED
  )
  implicit class WorkerStateUpdatedRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest](_l) {
    def state: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.worker.WorkerState] = field(_.state)((c_, f_) => c_.copy(state = f_))
  }
  final val STATE_FIELD_NUMBER = 1
  def of(
    state: edu.uci.ics.amber.engine.architecture.worker.WorkerState
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest(
    state
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.WorkerStateUpdatedRequest])
}

@SerialVersionUID(0L)
final case class LinkWorkersRequest(
    link: edu.uci.ics.amber.engine.common.PhysicalLink
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[LinkWorkersRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = link
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = link
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withLink(__v: edu.uci.ics.amber.engine.common.PhysicalLink): LinkWorkersRequest = copy(link = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = link
          if (__t != edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => link.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest.type = edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest])
}

object LinkWorkersRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest = {
    var __link: _root_.scala.Option[edu.uci.ics.amber.engine.common.PhysicalLink] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __link = _root_.scala.Some(__link.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PhysicalLink](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest(
        link = __link.getOrElse(edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest(
        link = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.PhysicalLink]).getOrElse(edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(16)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(16)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.PhysicalLink
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest(
    link = edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance
  )
  implicit class LinkWorkersRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest](_l) {
    def link: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.PhysicalLink] = field(_.link)((c_, f_) => c_.copy(link = f_))
  }
  final val LINK_FIELD_NUMBER = 1
  def of(
    link: edu.uci.ics.amber.engine.common.PhysicalLink
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest(
    link
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.LinkWorkersRequest])
}

/** Messages for the commands
  */
@SerialVersionUID(0L)
final case class AddInputChannelRequest(
    channelId: edu.uci.ics.amber.engine.common.ChannelIdentity,
    portId: edu.uci.ics.amber.engine.common.PortIdentity
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[AddInputChannelRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = channelId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = portId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = channelId
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = portId
        if (__v.serializedSize != 0) {
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withChannelId(__v: edu.uci.ics.amber.engine.common.ChannelIdentity): AddInputChannelRequest = copy(channelId = __v)
    def withPortId(__v: edu.uci.ics.amber.engine.common.PortIdentity): AddInputChannelRequest = copy(portId = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = channelId
          if (__t != edu.uci.ics.amber.engine.common.ChannelIdentity.defaultInstance) __t else null
        }
        case 2 => {
          val __t = portId
          if (__t != edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => channelId.toPMessage
        case 2 => portId.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest.type = edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest])
}

object AddInputChannelRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest = {
    var __channelId: _root_.scala.Option[edu.uci.ics.amber.engine.common.ChannelIdentity] = _root_.scala.None
    var __portId: _root_.scala.Option[edu.uci.ics.amber.engine.common.PortIdentity] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __channelId = _root_.scala.Some(__channelId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ChannelIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __portId = _root_.scala.Some(__portId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PortIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest(
        channelId = __channelId.getOrElse(edu.uci.ics.amber.engine.common.ChannelIdentity.defaultInstance),
        portId = __portId.getOrElse(edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest(
        channelId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.ChannelIdentity]).getOrElse(edu.uci.ics.amber.engine.common.ChannelIdentity.defaultInstance),
        portId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[edu.uci.ics.amber.engine.common.PortIdentity]).getOrElse(edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(27)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(27)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ChannelIdentity
      case 2 => __out = edu.uci.ics.amber.engine.common.PortIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest(
    channelId = edu.uci.ics.amber.engine.common.ChannelIdentity.defaultInstance,
    portId = edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance
  )
  implicit class AddInputChannelRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest](_l) {
    def channelId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.ChannelIdentity] = field(_.channelId)((c_, f_) => c_.copy(channelId = f_))
    def portId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.PortIdentity] = field(_.portId)((c_, f_) => c_.copy(portId = f_))
  }
  final val CHANNEL_ID_FIELD_NUMBER = 1
  final val PORT_ID_FIELD_NUMBER = 2
  def of(
    channelId: edu.uci.ics.amber.engine.common.ChannelIdentity,
    portId: edu.uci.ics.amber.engine.common.PortIdentity
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest(
    channelId,
    portId
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AddInputChannelRequest])
}

@SerialVersionUID(0L)
final case class AddPartitioningRequest(
    tag: edu.uci.ics.amber.engine.common.PhysicalLink,
    partitioning: edu.uci.ics.amber.engine.architecture.sendsemantics.Partitioning
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[AddPartitioningRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = tag
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest._typemapper_partitioning.toBase(partitioning)
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = tag
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest._typemapper_partitioning.toBase(partitioning)
        if (__v.serializedSize != 0) {
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withTag(__v: edu.uci.ics.amber.engine.common.PhysicalLink): AddPartitioningRequest = copy(tag = __v)
    def withPartitioning(__v: edu.uci.ics.amber.engine.architecture.sendsemantics.Partitioning): AddPartitioningRequest = copy(partitioning = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = tag
          if (__t != edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance) __t else null
        }
        case 2 => {
          val __t = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest._typemapper_partitioning.toBase(partitioning)
          if (__t != edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => tag.toPMessage
        case 2 => edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest._typemapper_partitioning.toBase(partitioning).toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest.type = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest])
}

object AddPartitioningRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest = {
    var __tag: _root_.scala.Option[edu.uci.ics.amber.engine.common.PhysicalLink] = _root_.scala.None
    var __partitioning: _root_.scala.Option[edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __tag = _root_.scala.Some(__tag.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PhysicalLink](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __partitioning = _root_.scala.Some(__partitioning.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest(
        tag = __tag.getOrElse(edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance),
        partitioning = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest._typemapper_partitioning.toCustom(__partitioning.getOrElse(edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage.defaultInstance))
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest(
        tag = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.PhysicalLink]).getOrElse(edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance),
        partitioning = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest._typemapper_partitioning.toCustom(__fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage]).getOrElse(edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage.defaultInstance))
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(28)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(28)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.PhysicalLink
      case 2 => __out = edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest(
    tag = edu.uci.ics.amber.engine.common.PhysicalLink.defaultInstance,
    partitioning = edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest._typemapper_partitioning.toCustom(edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage.defaultInstance)
  )
  implicit class AddPartitioningRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest](_l) {
    def tag: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.PhysicalLink] = field(_.tag)((c_, f_) => c_.copy(tag = f_))
    def partitioning: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.sendsemantics.Partitioning] = field(_.partitioning)((c_, f_) => c_.copy(partitioning = f_))
  }
  final val TAG_FIELD_NUMBER = 1
  final val PARTITIONING_FIELD_NUMBER = 2
  @transient
  private[rpc] val _typemapper_partitioning: _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage, edu.uci.ics.amber.engine.architecture.sendsemantics.Partitioning] = implicitly[_root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.sendsemantics.PartitioningMessage, edu.uci.ics.amber.engine.architecture.sendsemantics.Partitioning]]
  def of(
    tag: edu.uci.ics.amber.engine.common.PhysicalLink,
    partitioning: edu.uci.ics.amber.engine.architecture.sendsemantics.Partitioning
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest(
    tag,
    partitioning
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AddPartitioningRequest])
}

@SerialVersionUID(0L)
final case class AssignPortRequest(
    portId: edu.uci.ics.amber.engine.common.PortIdentity,
    input: _root_.scala.Boolean,
    schema: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[AssignPortRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = portId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = input
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      schema.foreach { __item =>
        val __value = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest._typemapper_schema.toBase(__item)
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = portId
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = input
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
      schema.foreach { __v =>
        val __m = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest._typemapper_schema.toBase(__v)
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def withPortId(__v: edu.uci.ics.amber.engine.common.PortIdentity): AssignPortRequest = copy(portId = __v)
    def withInput(__v: _root_.scala.Boolean): AssignPortRequest = copy(input = __v)
    def clearSchema = copy(schema = _root_.scala.collection.immutable.Map.empty)
    def addSchema(__vs: (_root_.scala.Predef.String, _root_.scala.Predef.String) *): AssignPortRequest = addAllSchema(__vs)
    def addAllSchema(__vs: Iterable[(_root_.scala.Predef.String, _root_.scala.Predef.String)]): AssignPortRequest = copy(schema = schema ++ __vs)
    def withSchema(__v: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]): AssignPortRequest = copy(schema = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = portId
          if (__t != edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance) __t else null
        }
        case 2 => {
          val __t = input
          if (__t != false) __t else null
        }
        case 3 => schema.iterator.map(edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest._typemapper_schema.toBase(_)).toSeq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => portId.toPMessage
        case 2 => _root_.scalapb.descriptors.PBoolean(input)
        case 3 => _root_.scalapb.descriptors.PRepeated(schema.iterator.map(edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest._typemapper_schema.toBase(_).toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.type = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest])
}

object AssignPortRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest = {
    var __portId: _root_.scala.Option[edu.uci.ics.amber.engine.common.PortIdentity] = _root_.scala.None
    var __input: _root_.scala.Boolean = false
    val __schema: _root_.scala.collection.mutable.Builder[(_root_.scala.Predef.String, _root_.scala.Predef.String), _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = _root_.scala.collection.immutable.Map.newBuilder[_root_.scala.Predef.String, _root_.scala.Predef.String]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __portId = _root_.scala.Some(__portId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PortIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 16 =>
          __input = _input__.readBool()
        case 26 =>
          __schema += edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest._typemapper_schema.toCustom(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry](_input__))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest(
        portId = __portId.getOrElse(edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance),
        input = __input,
        schema = __schema.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest(
        portId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.PortIdentity]).getOrElse(edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance),
        input = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        schema = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry]]).getOrElse(_root_.scala.Seq.empty).iterator.map(edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest._typemapper_schema.toCustom(_)).toMap
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(29)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(29)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.PortIdentity
      case 3 => __out = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      _root_.edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry
    )
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest(
    portId = edu.uci.ics.amber.engine.common.PortIdentity.defaultInstance,
    input = false,
    schema = _root_.scala.collection.immutable.Map.empty
  )
  @SerialVersionUID(0L)
  final case class SchemaEntry(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
      ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SchemaEntry] {
      @transient
      private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
      private[this] def __computeSerializedSize(): _root_.scala.Int = {
        var __size = 0
        
        {
          val __value = key
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
          }
        };
        
        {
          val __value = value
          if (!__value.isEmpty) {
            __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
          }
        };
        __size
      }
      override def serializedSize: _root_.scala.Int = {
        var __size = __serializedSizeMemoized
        if (__size == 0) {
          __size = __computeSerializedSize() + 1
          __serializedSizeMemoized = __size
        }
        __size - 1
        
      }
      def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
        {
          val __v = key
          if (!__v.isEmpty) {
            _output__.writeString(1, __v)
          }
        };
        {
          val __v = value
          if (!__v.isEmpty) {
            _output__.writeString(2, __v)
          }
        };
      }
      def withKey(__v: _root_.scala.Predef.String): SchemaEntry = copy(key = __v)
      def withValue(__v: _root_.scala.Predef.String): SchemaEntry = copy(value = __v)
      def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
        (__fieldNumber: @_root_.scala.unchecked) match {
          case 1 => {
            val __t = key
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = value
            if (__t != "") __t else null
          }
        }
      }
      def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
        _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
        (__field.number: @_root_.scala.unchecked) match {
          case 1 => _root_.scalapb.descriptors.PString(key)
          case 2 => _root_.scalapb.descriptors.PString(value)
        }
      }
      def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
      def companion: edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry.type = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry
      // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry])
  }
  
  object SchemaEntry extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry] {
    implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry] = this
    def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry = {
      var __key: _root_.scala.Predef.String = ""
      var __value: _root_.scala.Predef.String = ""
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __key = _input__.readStringRequireUtf8()
          case 18 =>
            __value = _input__.readStringRequireUtf8()
          case tag => _input__.skipField(tag)
        }
      }
      edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry(
          key = __key,
          value = __value
      )
    }
    implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry] = _root_.scalapb.descriptors.Reads{
      case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
        _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
        edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry(
          key = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse(""),
          value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
        )
      case _ => throw new RuntimeException("Expected PMessage")
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.javaDescriptor.getNestedTypes().get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.scalaDescriptor.nestedMessages(0)
    def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
    lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
    def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
    lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry(
      key = "",
      value = ""
    )
    implicit class SchemaEntryLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry](_l) {
      def key: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.key)((c_, f_) => c_.copy(key = f_))
      def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
    }
    final val KEY_FIELD_NUMBER = 1
    final val VALUE_FIELD_NUMBER = 2
    @transient
    implicit val keyValueMapper: _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] =
      _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)](__m => (__m.key, __m.value))(__p => edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry(__p._1, __p._2))
    def of(
      key: _root_.scala.Predef.String,
      value: _root_.scala.Predef.String
    ): _root_.edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry = _root_.edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry(
      key,
      value
    )
    // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry])
  }
  
  implicit class AssignPortRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest](_l) {
    def portId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.PortIdentity] = field(_.portId)((c_, f_) => c_.copy(portId = f_))
    def input: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.input)((c_, f_) => c_.copy(input = f_))
    def schema: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]] = field(_.schema)((c_, f_) => c_.copy(schema = f_))
  }
  final val PORT_ID_FIELD_NUMBER = 1
  final val INPUT_FIELD_NUMBER = 2
  final val SCHEMA_FIELD_NUMBER = 3
  @transient
  private[rpc] val _typemapper_schema: _root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)] = implicitly[_root_.scalapb.TypeMapper[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest.SchemaEntry, (_root_.scala.Predef.String, _root_.scala.Predef.String)]]
  def of(
    portId: edu.uci.ics.amber.engine.common.PortIdentity,
    input: _root_.scala.Boolean,
    schema: _root_.scala.collection.immutable.Map[_root_.scala.Predef.String, _root_.scala.Predef.String]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest(
    portId,
    input,
    schema
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.AssignPortRequest])
}

@SerialVersionUID(0L)
final case class FinalizeCheckpointRequest(
    checkpointId: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    writeTo: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[FinalizeCheckpointRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = checkpointId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = writeTo
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = checkpointId
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = writeTo
        if (!__v.isEmpty) {
          _output__.writeString(2, __v)
        }
      };
    }
    def withCheckpointId(__v: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity): FinalizeCheckpointRequest = copy(checkpointId = __v)
    def withWriteTo(__v: _root_.scala.Predef.String): FinalizeCheckpointRequest = copy(writeTo = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = checkpointId
          if (__t != edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance) __t else null
        }
        case 2 => {
          val __t = writeTo
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => checkpointId.toPMessage
        case 2 => _root_.scalapb.descriptors.PString(writeTo)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest.type = edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest])
}

object FinalizeCheckpointRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest = {
    var __checkpointId: _root_.scala.Option[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = _root_.scala.None
    var __writeTo: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __checkpointId = _root_.scala.Some(__checkpointId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __writeTo = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest(
        checkpointId = __checkpointId.getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        writeTo = __writeTo
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest(
        checkpointId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity]).getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        writeTo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(30)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(30)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest(
    checkpointId = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance,
    writeTo = ""
  )
  implicit class FinalizeCheckpointRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest](_l) {
    def checkpointId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = field(_.checkpointId)((c_, f_) => c_.copy(checkpointId = f_))
    def writeTo: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.writeTo)((c_, f_) => c_.copy(writeTo = f_))
  }
  final val CHECKPOINT_ID_FIELD_NUMBER = 1
  final val WRITE_TO_FIELD_NUMBER = 2
  def of(
    checkpointId: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    writeTo: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest(
    checkpointId,
    writeTo
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.FinalizeCheckpointRequest])
}

@SerialVersionUID(0L)
final case class InitializeExecutorRequest(
    totalWorkerCount: _root_.scala.Int,
    opExecInitInfo: com.google.protobuf.any.Any,
    isSource: _root_.scala.Boolean,
    language: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[InitializeExecutorRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = totalWorkerCount
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = opExecInitInfo
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = isSource
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(3, __value)
        }
      };
      
      {
        val __value = language
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = totalWorkerCount
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = opExecInitInfo
        if (__v.serializedSize != 0) {
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = isSource
        if (__v != false) {
          _output__.writeBool(3, __v)
        }
      };
      {
        val __v = language
        if (!__v.isEmpty) {
          _output__.writeString(4, __v)
        }
      };
    }
    def withTotalWorkerCount(__v: _root_.scala.Int): InitializeExecutorRequest = copy(totalWorkerCount = __v)
    def withOpExecInitInfo(__v: com.google.protobuf.any.Any): InitializeExecutorRequest = copy(opExecInitInfo = __v)
    def withIsSource(__v: _root_.scala.Boolean): InitializeExecutorRequest = copy(isSource = __v)
    def withLanguage(__v: _root_.scala.Predef.String): InitializeExecutorRequest = copy(language = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = totalWorkerCount
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = opExecInitInfo
          if (__t != com.google.protobuf.any.Any.defaultInstance) __t else null
        }
        case 3 => {
          val __t = isSource
          if (__t != false) __t else null
        }
        case 4 => {
          val __t = language
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(totalWorkerCount)
        case 2 => opExecInitInfo.toPMessage
        case 3 => _root_.scalapb.descriptors.PBoolean(isSource)
        case 4 => _root_.scalapb.descriptors.PString(language)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest.type = edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest])
}

object InitializeExecutorRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest = {
    var __totalWorkerCount: _root_.scala.Int = 0
    var __opExecInitInfo: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var __isSource: _root_.scala.Boolean = false
    var __language: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __totalWorkerCount = _input__.readInt32()
        case 18 =>
          __opExecInitInfo = _root_.scala.Some(__opExecInitInfo.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 24 =>
          __isSource = _input__.readBool()
        case 34 =>
          __language = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest(
        totalWorkerCount = __totalWorkerCount,
        opExecInitInfo = __opExecInitInfo.getOrElse(com.google.protobuf.any.Any.defaultInstance),
        isSource = __isSource,
        language = __language
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest(
        totalWorkerCount = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        opExecInitInfo = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[com.google.protobuf.any.Any]).getOrElse(com.google.protobuf.any.Any.defaultInstance),
        isSource = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[_root_.scala.Boolean]).getOrElse(false),
        language = __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(31)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(31)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest(
    totalWorkerCount = 0,
    opExecInitInfo = com.google.protobuf.any.Any.defaultInstance,
    isSource = false,
    language = ""
  )
  implicit class InitializeExecutorRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest](_l) {
    def totalWorkerCount: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.totalWorkerCount)((c_, f_) => c_.copy(totalWorkerCount = f_))
    def opExecInitInfo: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.opExecInitInfo)((c_, f_) => c_.copy(opExecInitInfo = f_))
    def isSource: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.isSource)((c_, f_) => c_.copy(isSource = f_))
    def language: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.language)((c_, f_) => c_.copy(language = f_))
  }
  final val TOTAL_WORKER_COUNT_FIELD_NUMBER = 1
  final val OP_EXEC_INIT_INFO_FIELD_NUMBER = 2
  final val IS_SOURCE_FIELD_NUMBER = 3
  final val LANGUAGE_FIELD_NUMBER = 4
  def of(
    totalWorkerCount: _root_.scala.Int,
    opExecInitInfo: com.google.protobuf.any.Any,
    isSource: _root_.scala.Boolean,
    language: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest(
    totalWorkerCount,
    opExecInitInfo,
    isSource,
    language
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.InitializeExecutorRequest])
}

@SerialVersionUID(0L)
final case class UpdateExecutorRequest(
    targetOpId: edu.uci.ics.amber.engine.common.PhysicalOpIdentity,
    newExecutor: com.google.protobuf.any.Any,
    stateTransferFunc: _root_.scala.Option[com.google.protobuf.any.Any]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[UpdateExecutorRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = targetOpId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = newExecutor
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      if (stateTransferFunc.isDefined) {
        val __value = stateTransferFunc.get
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = targetOpId
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = newExecutor
        if (__v.serializedSize != 0) {
          _output__.writeTag(2, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      stateTransferFunc.foreach { __v =>
        val __m = __v
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def withTargetOpId(__v: edu.uci.ics.amber.engine.common.PhysicalOpIdentity): UpdateExecutorRequest = copy(targetOpId = __v)
    def withNewExecutor(__v: com.google.protobuf.any.Any): UpdateExecutorRequest = copy(newExecutor = __v)
    def getStateTransferFunc: com.google.protobuf.any.Any = stateTransferFunc.getOrElse(com.google.protobuf.any.Any.defaultInstance)
    def clearStateTransferFunc: UpdateExecutorRequest = copy(stateTransferFunc = _root_.scala.None)
    def withStateTransferFunc(__v: com.google.protobuf.any.Any): UpdateExecutorRequest = copy(stateTransferFunc = Option(__v))
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = targetOpId
          if (__t != edu.uci.ics.amber.engine.common.PhysicalOpIdentity.defaultInstance) __t else null
        }
        case 2 => {
          val __t = newExecutor
          if (__t != com.google.protobuf.any.Any.defaultInstance) __t else null
        }
        case 3 => stateTransferFunc.orNull
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => targetOpId.toPMessage
        case 2 => newExecutor.toPMessage
        case 3 => stateTransferFunc.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest.type = edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest])
}

object UpdateExecutorRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest = {
    var __targetOpId: _root_.scala.Option[edu.uci.ics.amber.engine.common.PhysicalOpIdentity] = _root_.scala.None
    var __newExecutor: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var __stateTransferFunc: _root_.scala.Option[com.google.protobuf.any.Any] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __targetOpId = _root_.scala.Some(__targetOpId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.PhysicalOpIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 18 =>
          __newExecutor = _root_.scala.Some(__newExecutor.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 26 =>
          __stateTransferFunc = Option(__stateTransferFunc.fold(_root_.scalapb.LiteParser.readMessage[com.google.protobuf.any.Any](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest(
        targetOpId = __targetOpId.getOrElse(edu.uci.ics.amber.engine.common.PhysicalOpIdentity.defaultInstance),
        newExecutor = __newExecutor.getOrElse(com.google.protobuf.any.Any.defaultInstance),
        stateTransferFunc = __stateTransferFunc
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest(
        targetOpId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.PhysicalOpIdentity]).getOrElse(edu.uci.ics.amber.engine.common.PhysicalOpIdentity.defaultInstance),
        newExecutor = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[com.google.protobuf.any.Any]).getOrElse(com.google.protobuf.any.Any.defaultInstance),
        stateTransferFunc = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[_root_.scala.Option[com.google.protobuf.any.Any]])
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(32)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(32)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.PhysicalOpIdentity
      case 2 => __out = com.google.protobuf.any.Any
      case 3 => __out = com.google.protobuf.any.Any
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest(
    targetOpId = edu.uci.ics.amber.engine.common.PhysicalOpIdentity.defaultInstance,
    newExecutor = com.google.protobuf.any.Any.defaultInstance,
    stateTransferFunc = _root_.scala.None
  )
  implicit class UpdateExecutorRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest](_l) {
    def targetOpId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.PhysicalOpIdentity] = field(_.targetOpId)((c_, f_) => c_.copy(targetOpId = f_))
    def newExecutor: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.newExecutor)((c_, f_) => c_.copy(newExecutor = f_))
    def stateTransferFunc: _root_.scalapb.lenses.Lens[UpperPB, com.google.protobuf.any.Any] = field(_.getStateTransferFunc)((c_, f_) => c_.copy(stateTransferFunc = Option(f_)))
    def optionalStateTransferFunc: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Option[com.google.protobuf.any.Any]] = field(_.stateTransferFunc)((c_, f_) => c_.copy(stateTransferFunc = f_))
  }
  final val TARGET_OP_ID_FIELD_NUMBER = 1
  final val NEW_EXECUTOR_FIELD_NUMBER = 2
  final val STATE_TRANSFER_FUNC_FIELD_NUMBER = 3
  def of(
    targetOpId: edu.uci.ics.amber.engine.common.PhysicalOpIdentity,
    newExecutor: com.google.protobuf.any.Any,
    stateTransferFunc: _root_.scala.Option[com.google.protobuf.any.Any]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest(
    targetOpId,
    newExecutor,
    stateTransferFunc
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.UpdateExecutorRequest])
}

@SerialVersionUID(0L)
final case class EmptyRequest(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[EmptyRequest] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest.type = edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest])
}

object EmptyRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest(
  )
  implicit class EmptyRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.EmptyRequest])
}

@SerialVersionUID(0L)
final case class PrepareCheckpointRequest(
    checkpointId: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    estimationOnly: _root_.scala.Boolean
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[PrepareCheckpointRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = checkpointId
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      
      {
        val __value = estimationOnly
        if (__value != false) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(2, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = checkpointId
        if (__v.serializedSize != 0) {
          _output__.writeTag(1, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
      {
        val __v = estimationOnly
        if (__v != false) {
          _output__.writeBool(2, __v)
        }
      };
    }
    def withCheckpointId(__v: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity): PrepareCheckpointRequest = copy(checkpointId = __v)
    def withEstimationOnly(__v: _root_.scala.Boolean): PrepareCheckpointRequest = copy(estimationOnly = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = checkpointId
          if (__t != edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance) __t else null
        }
        case 2 => {
          val __t = estimationOnly
          if (__t != false) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => checkpointId.toPMessage
        case 2 => _root_.scalapb.descriptors.PBoolean(estimationOnly)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest.type = edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest])
}

object PrepareCheckpointRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest = {
    var __checkpointId: _root_.scala.Option[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = _root_.scala.None
    var __estimationOnly: _root_.scala.Boolean = false
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __checkpointId = _root_.scala.Some(__checkpointId.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case 16 =>
          __estimationOnly = _input__.readBool()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest(
        checkpointId = __checkpointId.getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        estimationOnly = __estimationOnly
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest(
        checkpointId = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[edu.uci.ics.amber.engine.common.ChannelMarkerIdentity]).getOrElse(edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance),
        estimationOnly = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Boolean]).getOrElse(false)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(33)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(33)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest(
    checkpointId = edu.uci.ics.amber.engine.common.ChannelMarkerIdentity.defaultInstance,
    estimationOnly = false
  )
  implicit class PrepareCheckpointRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest](_l) {
    def checkpointId: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.ChannelMarkerIdentity] = field(_.checkpointId)((c_, f_) => c_.copy(checkpointId = f_))
    def estimationOnly: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.estimationOnly)((c_, f_) => c_.copy(estimationOnly = f_))
  }
  final val CHECKPOINT_ID_FIELD_NUMBER = 1
  final val ESTIMATION_ONLY_FIELD_NUMBER = 2
  def of(
    checkpointId: edu.uci.ics.amber.engine.common.ChannelMarkerIdentity,
    estimationOnly: _root_.scala.Boolean
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest(
    checkpointId,
    estimationOnly
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.PrepareCheckpointRequest])
}

@SerialVersionUID(0L)
final case class QueryStatisticsRequest(
    filterByWorkers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[QueryStatisticsRequest] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      filterByWorkers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      filterByWorkers.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearFilterByWorkers = copy(filterByWorkers = _root_.scala.Seq.empty)
    def addFilterByWorkers(__vs: edu.uci.ics.amber.engine.common.ActorVirtualIdentity *): QueryStatisticsRequest = addAllFilterByWorkers(__vs)
    def addAllFilterByWorkers(__vs: Iterable[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): QueryStatisticsRequest = copy(filterByWorkers = filterByWorkers ++ __vs)
    def withFilterByWorkers(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): QueryStatisticsRequest = copy(filterByWorkers = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => filterByWorkers
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(filterByWorkers.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest.type = edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest])
}

object QueryStatisticsRequest extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest = {
    val __filterByWorkers: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __filterByWorkers += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest(
        filterByWorkers = __filterByWorkers.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest(
        filterByWorkers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(34)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(34)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest(
    filterByWorkers = _root_.scala.Seq.empty
  )
  implicit class QueryStatisticsRequestLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest](_l) {
    def filterByWorkers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]] = field(_.filterByWorkers)((c_, f_) => c_.copy(filterByWorkers = f_))
  }
  final val FILTER_BY_WORKERS_FIELD_NUMBER = 1
  def of(
    filterByWorkers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest = _root_.edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest(
    filterByWorkers
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.QueryStatisticsRequest])
}

/** Ping message
  */
@SerialVersionUID(0L)
final case class Ping(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Ping] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = i
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = end
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
        }
      };
      
      {
        val __value = to
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = i
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = end
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = to
        if (__v.serializedSize != 0) {
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withI(__v: _root_.scala.Int): Ping = copy(i = __v)
    def withEnd(__v: _root_.scala.Int): Ping = copy(end = __v)
    def withTo(__v: edu.uci.ics.amber.engine.common.ActorVirtualIdentity): Ping = copy(to = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = i
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = end
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = to
          if (__t != edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(i)
        case 2 => _root_.scalapb.descriptors.PInt(end)
        case 3 => to.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.Ping.type = edu.uci.ics.amber.engine.architecture.rpc.Ping
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Ping])
}

object Ping extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Ping] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Ping] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.Ping = {
    var __i: _root_.scala.Int = 0
    var __end: _root_.scala.Int = 0
    var __to: _root_.scala.Option[edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __i = _input__.readInt32()
        case 16 =>
          __end = _input__.readInt32()
        case 26 =>
          __to = _root_.scala.Some(__to.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ActorVirtualIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.Ping(
        i = __i,
        end = __end,
        to = __to.getOrElse(edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.Ping] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.Ping(
        i = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        end = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        to = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]).getOrElse(edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(17)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(17)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.Ping(
    i = 0,
    end = 0,
    to = edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance
  )
  implicit class PingLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Ping]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Ping](_l) {
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.i)((c_, f_) => c_.copy(i = f_))
    def end: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.end)((c_, f_) => c_.copy(end = f_))
    def to: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = field(_.to)((c_, f_) => c_.copy(to = f_))
  }
  final val I_FIELD_NUMBER = 1
  final val END_FIELD_NUMBER = 2
  final val TO_FIELD_NUMBER = 3
  def of(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.ActorVirtualIdentity
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.Ping = _root_.edu.uci.ics.amber.engine.architecture.rpc.Ping(
    i,
    end,
    to
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Ping])
}

/** Pong message
  */
@SerialVersionUID(0L)
final case class Pong(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Pong] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = i
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      
      {
        val __value = end
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(2, __value)
        }
      };
      
      {
        val __value = to
        if (__value.serializedSize != 0) {
          __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = i
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
      {
        val __v = end
        if (__v != 0) {
          _output__.writeInt32(2, __v)
        }
      };
      {
        val __v = to
        if (__v.serializedSize != 0) {
          _output__.writeTag(3, 2)
          _output__.writeUInt32NoTag(__v.serializedSize)
          __v.writeTo(_output__)
        }
      };
    }
    def withI(__v: _root_.scala.Int): Pong = copy(i = __v)
    def withEnd(__v: _root_.scala.Int): Pong = copy(end = __v)
    def withTo(__v: edu.uci.ics.amber.engine.common.ActorVirtualIdentity): Pong = copy(to = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = i
          if (__t != 0) __t else null
        }
        case 2 => {
          val __t = end
          if (__t != 0) __t else null
        }
        case 3 => {
          val __t = to
          if (__t != edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(i)
        case 2 => _root_.scalapb.descriptors.PInt(end)
        case 3 => to.toPMessage
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.Pong.type = edu.uci.ics.amber.engine.architecture.rpc.Pong
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Pong])
}

object Pong extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pong] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pong] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.Pong = {
    var __i: _root_.scala.Int = 0
    var __end: _root_.scala.Int = 0
    var __to: _root_.scala.Option[edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = _root_.scala.None
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __i = _input__.readInt32()
        case 16 =>
          __end = _input__.readInt32()
        case 26 =>
          __to = _root_.scala.Some(__to.fold(_root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ActorVirtualIdentity](_input__))(_root_.scalapb.LiteParser.readMessage(_input__, _)))
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.Pong(
        i = __i,
        end = __end,
        to = __to.getOrElse(edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.Pong] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.Pong(
        i = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        end = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Int]).getOrElse(0),
        to = __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]).getOrElse(edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(18)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(18)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 3 => __out = edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.Pong(
    i = 0,
    end = 0,
    to = edu.uci.ics.amber.engine.common.ActorVirtualIdentity.defaultInstance
  )
  implicit class PongLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Pong]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Pong](_l) {
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.i)((c_, f_) => c_.copy(i = f_))
    def end: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.end)((c_, f_) => c_.copy(end = f_))
    def to: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = field(_.to)((c_, f_) => c_.copy(to = f_))
  }
  final val I_FIELD_NUMBER = 1
  final val END_FIELD_NUMBER = 2
  final val TO_FIELD_NUMBER = 3
  def of(
    i: _root_.scala.Int,
    end: _root_.scala.Int,
    to: edu.uci.ics.amber.engine.common.ActorVirtualIdentity
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.Pong = _root_.edu.uci.ics.amber.engine.architecture.rpc.Pong(
    i,
    end,
    to
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pong])
}

/** Nested message
  */
@SerialVersionUID(0L)
final case class Nested(
    k: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Nested] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = k
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = k
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
    }
    def withK(__v: _root_.scala.Int): Nested = copy(k = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = k
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(k)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.Nested.type = edu.uci.ics.amber.engine.architecture.rpc.Nested
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Nested])
}

object Nested extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Nested] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Nested] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.Nested = {
    var __k: _root_.scala.Int = 0
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __k = _input__.readInt32()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.Nested(
        k = __k
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.Nested] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.Nested(
        k = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(20)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(20)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.Nested(
    k = 0
  )
  implicit class NestedLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Nested]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Nested](_l) {
    def k: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.k)((c_, f_) => c_.copy(k = f_))
  }
  final val K_FIELD_NUMBER = 1
  def of(
    k: _root_.scala.Int
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.Nested = _root_.edu.uci.ics.amber.engine.architecture.rpc.Nested(
    k
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Nested])
}

/** Pass message
  */
@SerialVersionUID(0L)
final case class Pass(
    value: _root_.scala.Predef.String
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Pass] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = value
        if (!__value.isEmpty) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = value
        if (!__v.isEmpty) {
          _output__.writeString(1, __v)
        }
      };
    }
    def withValue(__v: _root_.scala.Predef.String): Pass = copy(value = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = value
          if (__t != "") __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PString(value)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.Pass.type = edu.uci.ics.amber.engine.architecture.rpc.Pass
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Pass])
}

object Pass extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pass] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pass] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.Pass = {
    var __value: _root_.scala.Predef.String = ""
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __value = _input__.readStringRequireUtf8()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.Pass(
        value = __value
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.Pass] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.Pass(
        value = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Predef.String]).getOrElse("")
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(19)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(19)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.Pass(
    value = ""
  )
  implicit class PassLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Pass]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Pass](_l) {
    def value: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Predef.String] = field(_.value)((c_, f_) => c_.copy(value = f_))
  }
  final val VALUE_FIELD_NUMBER = 1
  def of(
    value: _root_.scala.Predef.String
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.Pass = _root_.edu.uci.ics.amber.engine.architecture.rpc.Pass(
    value
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Pass])
}

/** ErrorCommand message
  */
@SerialVersionUID(0L)
final case class ErrorCommand(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[ErrorCommand] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand.type = edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand])
}

object ErrorCommand extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(22)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(22)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand(
  )
  implicit class ErrorCommandLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand = _root_.edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.ErrorCommand])
}

/** Recursion message
  */
@SerialVersionUID(0L)
final case class Recursion(
    i: _root_.scala.Int
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Recursion] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = i
        if (__value != 0) {
          __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(1, __value)
        }
      };
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      {
        val __v = i
        if (__v != 0) {
          _output__.writeInt32(1, __v)
        }
      };
    }
    def withI(__v: _root_.scala.Int): Recursion = copy(i = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = i
          if (__t != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PInt(i)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.Recursion.type = edu.uci.ics.amber.engine.architecture.rpc.Recursion
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Recursion])
}

object Recursion extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Recursion] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Recursion] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.Recursion = {
    var __i: _root_.scala.Int = 0
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 8 =>
          __i = _input__.readInt32()
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.Recursion(
        i = __i
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.Recursion] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.Recursion(
        i = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Int]).getOrElse(0)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(26)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(26)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.Recursion(
    i = 0
  )
  implicit class RecursionLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Recursion]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Recursion](_l) {
    def i: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Int] = field(_.i)((c_, f_) => c_.copy(i = f_))
  }
  final val I_FIELD_NUMBER = 1
  def of(
    i: _root_.scala.Int
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.Recursion = _root_.edu.uci.ics.amber.engine.architecture.rpc.Recursion(
    i
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Recursion])
}

/** Collect message
  */
@SerialVersionUID(0L)
final case class Collect(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Collect] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      workers.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      workers.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearWorkers = copy(workers = _root_.scala.Seq.empty)
    def addWorkers(__vs: edu.uci.ics.amber.engine.common.ActorVirtualIdentity *): Collect = addAllWorkers(__vs)
    def addAllWorkers(__vs: Iterable[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): Collect = copy(workers = workers ++ __vs)
    def withWorkers(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): Collect = copy(workers = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => workers
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(workers.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.Collect.type = edu.uci.ics.amber.engine.architecture.rpc.Collect
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Collect])
}

object Collect extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Collect] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Collect] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.Collect = {
    val __workers: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __workers += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.Collect(
        workers = __workers.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.Collect] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.Collect(
        workers = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(23)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(23)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.Collect(
    workers = _root_.scala.Seq.empty
  )
  implicit class CollectLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Collect]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Collect](_l) {
    def workers: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]] = field(_.workers)((c_, f_) => c_.copy(workers = f_))
  }
  final val WORKERS_FIELD_NUMBER = 1
  def of(
    workers: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.Collect = _root_.edu.uci.ics.amber.engine.architecture.rpc.Collect(
    workers
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Collect])
}

/** GenerateNumber message
  */
@SerialVersionUID(0L)
final case class GenerateNumber(
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[GenerateNumber] {
    final override def serializedSize: _root_.scala.Int = 0
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
    }
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = throw new MatchError(__fieldNumber)
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = throw new MatchError(__field)
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber.type = edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber])
}

object GenerateNumber extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber = {
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber(
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber(
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(24)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(24)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber(
  )
  implicit class GenerateNumberLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber](_l) {
  }
  def of(
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber = _root_.edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber(
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.GenerateNumber])
}

/** MultiCall message
  */
@SerialVersionUID(0L)
final case class MultiCall(
    seq: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[MultiCall] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      seq.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      seq.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearSeq = copy(seq = _root_.scala.Seq.empty)
    def addSeq(__vs: edu.uci.ics.amber.engine.common.ActorVirtualIdentity *): MultiCall = addAllSeq(__vs)
    def addAllSeq(__vs: Iterable[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): MultiCall = copy(seq = seq ++ __vs)
    def withSeq(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): MultiCall = copy(seq = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => seq
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(seq.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.MultiCall.type = edu.uci.ics.amber.engine.architecture.rpc.MultiCall
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.MultiCall])
}

object MultiCall extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.MultiCall] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.MultiCall] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.MultiCall = {
    val __seq: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __seq += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.MultiCall(
        seq = __seq.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.MultiCall] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.MultiCall(
        seq = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(21)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(21)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.MultiCall(
    seq = _root_.scala.Seq.empty
  )
  implicit class MultiCallLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.MultiCall]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.MultiCall](_l) {
    def seq: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]] = field(_.seq)((c_, f_) => c_.copy(seq = f_))
  }
  final val SEQ_FIELD_NUMBER = 1
  def of(
    seq: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.MultiCall = _root_.edu.uci.ics.amber.engine.architecture.rpc.MultiCall(
    seq
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.MultiCall])
}

/** Chain message
  */
@SerialVersionUID(0L)
final case class Chain(
    nexts: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    ) extends scalapb.GeneratedMessage with edu.uci.ics.amber.engine.architecture.rpc.ControlRequest.NonEmpty with scalapb.lenses.Updatable[Chain] {
    @transient
    private[this] var __serializedSizeMemoized: _root_.scala.Int = 0
    private[this] def __computeSerializedSize(): _root_.scala.Int = {
      var __size = 0
      nexts.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var __size = __serializedSizeMemoized
      if (__size == 0) {
        __size = __computeSerializedSize() + 1
        __serializedSizeMemoized = __size
      }
      __size - 1
      
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      nexts.foreach { __v =>
        val __m = __v
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
    }
    def clearNexts = copy(nexts = _root_.scala.Seq.empty)
    def addNexts(__vs: edu.uci.ics.amber.engine.common.ActorVirtualIdentity *): Chain = addAllNexts(__vs)
    def addAllNexts(__vs: Iterable[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): Chain = copy(nexts = nexts ++ __vs)
    def withNexts(__v: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]): Chain = copy(nexts = __v)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => nexts
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PRepeated(nexts.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToSingleLineUnicodeString(this)
    def companion: edu.uci.ics.amber.engine.architecture.rpc.Chain.type = edu.uci.ics.amber.engine.architecture.rpc.Chain
    // @@protoc_insertion_point(GeneratedMessage[edu.uci.ics.amber.engine.architecture.rpc.Chain])
}

object Chain extends scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Chain] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Chain] = this
  def parseFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): edu.uci.ics.amber.engine.architecture.rpc.Chain = {
    val __nexts: _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity] = new _root_.scala.collection.immutable.VectorBuilder[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
    var _done__ = false
    while (!_done__) {
      val _tag__ = _input__.readTag()
      _tag__ match {
        case 0 => _done__ = true
        case 10 =>
          __nexts += _root_.scalapb.LiteParser.readMessage[edu.uci.ics.amber.engine.common.ActorVirtualIdentity](_input__)
        case tag => _input__.skipField(tag)
      }
    }
    edu.uci.ics.amber.engine.architecture.rpc.Chain(
        nexts = __nexts.result()
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[edu.uci.ics.amber.engine.architecture.rpc.Chain] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage eq scalaDescriptor), "FieldDescriptor does not match message type.")
      edu.uci.ics.amber.engine.architecture.rpc.Chain(
        nexts = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = ControlCommandsProto.javaDescriptor.getMessageTypes().get(25)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = ControlCommandsProto.scalaDescriptor.messages(25)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 1 => __out = edu.uci.ics.amber.engine.common.ActorVirtualIdentity
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = edu.uci.ics.amber.engine.architecture.rpc.Chain(
    nexts = _root_.scala.Seq.empty
  )
  implicit class ChainLens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Chain]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, edu.uci.ics.amber.engine.architecture.rpc.Chain](_l) {
    def nexts: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]] = field(_.nexts)((c_, f_) => c_.copy(nexts = f_))
  }
  final val NEXTS_FIELD_NUMBER = 1
  def of(
    nexts: _root_.scala.Seq[edu.uci.ics.amber.engine.common.ActorVirtualIdentity]
  ): _root_.edu.uci.ics.amber.engine.architecture.rpc.Chain = _root_.edu.uci.ics.amber.engine.architecture.rpc.Chain(
    nexts
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[edu.uci.ics.amber.engine.architecture.rpc.Chain])
}
